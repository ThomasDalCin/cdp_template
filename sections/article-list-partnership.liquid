<!-- Article list home page -->
<div class="wrapper-articles-list w-full h-auto flex flex-col items-start justify-center gap-y-4 px-6 mt-[194px] lg:px-20 lg:pt-[60px] lg:flex-row lg:flex-wrap lg:gap-x-4 lg:items-center lg:justify-start">

  <!-- Assign liquid variables -->
  {% assign allBlogs = "Partnership, " | split: "," %}
  {% for handle in allBlogs %}
    {% for article in blogs[handle].articles %}
      {% unless article.tags contains "Past" %}

        <!-- Article wrap -->
        <div class="card-article w-full h-auto flex flex-col items-start justify-start rounded-2xl bg-[#EFEEED] lg:w-[calc(50%_-_1rem)]">
          <!-- Article image -->
          <div class="w-full h-[220px] min-h-[220px]">
            <img
              src="{{ article.image |  img_url: 'master'}}"
              alt="{{ article.title }}"
              class="w-full h-full object-cover object-center rounded-t-2xl">
          </div>

          <!-- Article wrap content -->
          <div class="card-article-content w-full h-auto flex flex-col gap-y-6 items-start justify-start p-6">

            <div class="w-full h-auto flex flex-col items-start justify-center gap-y-3">
              <p class="text-[24px] leading-[24px] tt-norms-pro-reg">{{ article.title }}</p>
              <p class="body-14">{{ article.content | truncate: 100 }}</p>
            </div>

            <!-- Article card button -->
            <div class="w-full h-auto flex flex-row items-start justify-end">
              <!-- Container button -->
              <a href="{{ article.url }}">
                <div class="inline-flex cta-choco-round w-[129px] h-[32px]">
                  <p class="body-14 tt-norms-pro-reg">{{ section.settings.cta_text | default: "Discover more" }}</p>
                </div>
              </a>
            </div>
          </div>


        </div>
      {% endunless %}

    {% endfor %}
  {% endfor %}
</div>

<!-- Past Articles Container -->
<div class="w-full h-auto flex items-start justify-center flex-col mb-10 lg:mb-[120px]">

  <!-- Card Title Section -->
  <div class="w-full h-auto flex items-start justify-center px-6 pt-14 pb-8 lg:px-20 lg:py-[60px] lg:justify-start">
    <p class="text-[48px] leading-[52px] tt-norms-pro-light">{{ section.settings.main_title | default: "Previous partnership" }}</p>
  </div>

  <!-- Arrows box -->
  <div class="w-full h-auto hidden lg:flex lg:justify-end lg:gap-x-6 lg:px-10 lg:mb-10">
    <div class="w-auto h-auto flex-row inline-flex gap-x-4 rounded-full bg-[#F7F7F7] px-4 py-2 hover:bg-[#A9A09E] transition-all duration-150 ease-in cursor-pointer">
      <button id="prevArrow" class="carousel-arrow left-arrow flex items-center justify-center w-6 h-6 text-white">
        {% render 'arrow-left-icon' %}
      </button>
      <button id="nextArrow" class="carousel-arrow right-arrow flex items-center justify-center w-6 h-6  text-white">
        {% render 'arrow-right-icon' %}
      </button>
    </div>
  </div>

  <!-- Scrolling Past Articles Container -->
  <div class="article-list-container w-full h-auto flex items-start justify-center flex-col py-4 px-6 lg:py-0">

    <!-- Scrolling container -->
    <div class="w-[calc(100%+4rem)] px-8 -mx-8 overflow-x-auto h-auto flex flex-row items-center justify-start gap-x-2 p-0 mb-8 lg:px-20 lg:gap-x-4">
      {% assign allBlogs = "Partnership, " | split: "," %}
      {% for handle in allBlogs %}
        {% for article in blogs[handle].articles %}
          {% assign cardColorsValue = "#908987,#000000,#423C3B,#908987,#A9A09E" | split: "," %}
          {% assign article_Id = article.id %}
          {% assign colorIndex = article_Id | modulo: cardColorsValue.size %}
          {% assign cardColor = cardColorsValue[colorIndex] %}

          {% if cardColor == '#423C3B' or cardColor == '#000000' %}
            {% assign textColorClass = 'text-white' %}
          {% else %}
            {% assign textColorClass = 'text-black' %}
          {% endif %}
          
          {% if article.tags contains 'Past' %}
            {% assign is_even = forloop.index | modulo: 2 %}
              <div class="w-[247px] min-w-[247px] h-[286px] max-h-[286px] p-6 rounded-2xl flex flex-col items-start justify-start gap-y-6 relative lg:w-[320px] lg:min-w-[320px]" style="background-color: {{ cardColor }};">
              <!-- Card Content -->
              <div class="w-full h-auto flex items-start justify-center flex-col gap-y-4">
                <p class="text-[24px] leading-[30px] tt-norms-pro-reg {{ textColorClass }}">{{ article.title }}</p>
                <p class="body-14 {{ textColorClass }}">{{ article.content | truncate: 100 }}</p>
              </div>
              <!-- Button content -->
              <div class="w-full h-auto flex items-center justify-end absolute right-6 bottom-6">
                <!-- Container Arrow button -->
                <a href="{{ article.url }}">
                  <div class="inline-flex p-2 rounded-xl bg-white items-center justify-center">
                    {% render 'arrow-right-icon' %}
                  </div>
                </a>
              </div>
            </div>
          {% endif %}
        {% endfor %}
      {% endfor %}
    </div>
  </div>
</div>


<style>
  .carousel-arrow.disabled {
    opacity: 0.5;
    pointer-events: none;
  }

  .carousel-arrow:not(.disabled) {
    opacity: 1;
    pointer-events: auto;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const prevArrow = document.getElementById('prevArrow');
    const nextArrow = document.getElementById('nextArrow');
    const scrollContainer = document.querySelector('.article-list-container > div');
  
    if (!scrollContainer || !prevArrow || !nextArrow) {
        console.error('Error: Scroll container or arrows not found.');
        return;
    }
  
    const cards = Array.from(scrollContainer.children);
    if (cards.length === 0) {
        console.error('Error: No cards found inside the scroll container.');
        return;
    }
  
    const cardWidth = cards[0].offsetWidth;
    const cardMarginRight = parseInt(getComputedStyle(cards[0]).marginRight || '0', 10);
    const scrollAmount = cardWidth + cardMarginRight;
  
    function updateArrows() {
        const currentScrollLeft = scrollContainer.scrollLeft;
        const maxScrollLeft = scrollContainer.scrollWidth - scrollContainer.clientWidth;
  
        prevArrow.classList.toggle('disabled', currentScrollLeft === 0);
        nextArrow.classList.toggle('disabled', currentScrollLeft >= maxScrollLeft);
    }
  
    function scrollContainerBy(amount) {
        const currentScrollLeft = scrollContainer.scrollLeft;
        const maxScrollLeft = scrollContainer.scrollWidth - scrollContainer.clientWidth;
  
        let newScrollLeft = Math.min(Math.max(currentScrollLeft + amount, 0), maxScrollLeft);
  
        scrollContainer.scrollTo({
            left: newScrollLeft,
            behavior: 'smooth'
        });
  
        setTimeout(updateArrows, 300); 
    }
  
  
    prevArrow.addEventListener('click', function () {
        scrollContainerBy(-scrollAmount);
    });
  
    nextArrow.addEventListener('click', function () {
        scrollContainerBy(scrollAmount);
    });
  
    updateArrows();
    scrollContainer.addEventListener('scroll', updateArrows);
  });
</script>

{% schema %}
  {
    "name": "Article Partnerships",
    "settings": [
      {
        "type": "text",
        "id": "cta_text",
        "default": "Discover more",
        "label": "Cta Card Text"
      }, {
        "type": "text",
        "id": "main_title",
        "default": "Previous Partnerships",
        "label": "Title Previous Partnerships Section"
      }
    ]
  }
{% endschema %}