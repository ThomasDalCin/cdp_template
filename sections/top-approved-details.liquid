<!-- top approved product gallery section -->
<div class="product-title-container w-full h-auto flex items-center justify-center p-4 mt-[70px] mb-10 relative lg:mt-[90px]">
  <div class="container-back-arrow absolute left-[16px] top-[16px]">
    <a href="javascript:history.back()">
      {% render 'back-arrow-icon' %}
    </a>
  </div>
  <h1 class="body-14-medium">{{ product.title }}</h1>
</div>

<div class="w-full h-auto flex flex-col items-start justify-center gap-y-6 lg:flex-row lg:relative mb-10">
  <div class="top-section-gallery w-full h-auto flex flex-col gap-y-2 items-center justify-start p-4">

    <!-- assign liquid variables metaobjects -->
    {% assign external_gallery = product.metafields.custom.external_images_approved_boat.value %}
    {% assign external_gallery_split = product.metafields.custom.external_images_approved_boat.value | json | 
 replace: '{', '' | replace: '}', '' | split: "," %}
    {% assign internal_gallery = product.metafields.custom.internal_boat_up.value %}
    {% assign internal_gallery_split = product.metafields.custom.internal_boat_up.value | json | replace: '{', '' | 
 replace: '}', '' | split: "," %}
    {% assign internal_gallery_down = product.metafields.custom.internal_boat_down.value %}
    {% assign internal_gallery_down_split = product.metafields.custom.internal_boat_down.value | json | replace: '{',
 '' | replace: '}', '' | split: "," %}

    <!-- external gallery section -->
    <div
      class="container-gallery w-full h-auto flex flex-col items-center justify-start gap-y-2 lg:flex-row-reverse lg:items-start lg:gap-x-3"
      id="external-content"
      data-attribute="external-gallery">
      <div class="main-img-container w-full h-auto relative lg:flex-grow">
        {% if external_gallery %}
          {% for el in external_gallery_split %}
            {% assign val = el | split: '"' %}
            {% if forloop.first %}
              {% assign updated_values = val[1] %}
            {% else %}
              {% assign updated_values = updated_values | append: "," | append: val[1] %}
            {% endif %}
          {% endfor %}
          {% assign external_images = updated_values | split: "," %}
          {% assign first_image = external_gallery[external_images[0]] %}
          <img
            src="{{ first_image | img_url: 'master' }}"
            class="w-full h-[220px] rounded-lg object-cover object-center lg:h-[878px] lg:rounded-none"
            alt="{{ first_image.alt }}"
            id="main-img">
        {% endif %}
      </div>

      <div class="w-full max-h-[220px] h-auto lg:w-auto lg:max-h-none">
        <div class="flex flex-row items-center justify-start overflow-x-auto space-x-2 h-auto lg:flex lg:flex-col lg:gap-y-3 lg:space-x-0">
          {% for external_image in external_images %}
            {% assign external_img = external_gallery[external_image] %}
            <div class="container-magnetic-scroll w-[165px] h-[128px] flex-shrink-0 lg:h-[160pxpx] lg:w-[252px]">
              <img
                src="{{ external_img | img_url: 'master' }}"
                class="w-full h-full object-cover rounded-lg gallery-main-scroll-image lg:rounded"
                alt="{{  external_img.alt }}"
                data-image-src="{{ external_img | img_url: 'master' }}">
            </div>
          {% endfor %}
        </div>
      </div>
    </div>

    <!-- internal gallery section -->
    <div
      class="container-gallery w-full h-auto flex flex-col items-center justify-start gap-y-2 hidden lg:flex-row-reverse lg:items-start lg:gap-x-3"
      id="internal-content"
      data-attribute="internal-gallery">
      <div class="main-img-container w-full h-auto relative  lg:flex-grow">
        {% if internal_gallery %}
          {% for el in internal_gallery_split %}
            {% assign val = el | split: '"' %}
            {% if forloop.first %}
              {% assign updated_values = val[1] %}
            {% else %}
              {% assign updated_values = updated_values | append: "," | append: val[1] %}
            {% endif %}
          {% endfor %}
          {% assign internal_images = updated_values | split: "," %}
          {% assign first_image_internal = internal_gallery[internal_images[0]] %}
          <img
            src="{{ first_image_internal | img_url: 'master' }}"
            class="w-full h-[220px] rounded-lg object-cover object-center lg:h-[878px] lg:rounded-none"
            alt="{{ first_image_internal.alt }}"
            id="main-img-internal">
        {% endif %}
      </div>

      <div class="w-full h-auto lg:w-auto lg:max-h-none">
        <div class="flex flex-row items-center justify-start overflow-x-auto space-x-2 h-auto lg:flex lg:flex-col lg:gap-y-3 lg:space-x-0">
          {% for internal_image in internal_images %}
            {% assign internal_img = internal_gallery[internal_image] %}
            <div class="container-magnetic-scroll w-[165px] h-[128px] flex-shrink-0 lg:h-[160pxpx] lg:w-[252px]">
              <img
                src="{{ internal_img | img_url: 'master' }}"
                class="w-full h-full object-cover rounded-lg gallery-main-scroll-image lg:rounded"
                data-image-src="{{ internal_img | img_url: 'master' }}"
                alt="{{ internal_img.alt }}">
            </div>
          {% endfor %}
        </div>
      </div>
    </div>

    <!-- tab section -->
    <div class="tab-section w-full h-auto flex flex-row items-center justify-start mb-7 lg:absolute lg:justify-end lg:w-auto lg:top-[-32px] lg:right-0 z-20">
      <div class="tab-content flex-1 h-auto flex items-center justify-center relative p-2 cursor-pointer lg:flex-none lg:w-[170px]" id="external-tab">
        <p class="body-14">{{ section.settings.tab_external }}</p>
        <div class="tab-rect absolute left-1/2 bottom-0 -translate-x-1/2 -translate-y-1/2 w-[16px] h-[1px] bg-black transition-transform duration-300 ease-in-out"></div>
      </div>
      <div class="tab-content flex-1 h-auto flex items-center justify-center relative p-2 cursor-pointer lg:flex-none lg:w-[170px]" id="internal-tab">
        <p class="body-14">{{ section.settings.tab_internal }}</p>
        <div class="tab-rect absolute left-1/2 bottom-0 -translate-x-1/2 -translate-y-1/2 w-[16px] h-[1px] bg-black hidden transition-transform duration-300 ease-in-out"></div>
      </div>
    </div>

  </div>

</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const externalTab = document.getElementById('external-tab');
        const internalTab = document.getElementById('internal-tab');
        const externalRect = externalTab.querySelector('.tab-rect');
        const internalRect = internalTab.querySelector('.tab-rect');
        const externalContent = document.getElementById('external-content');
        const internalContent = document.getElementById('internal-content');
        const mainImg = document.getElementById('main-img');
        const mainImgInternal = document.getElementById('main-img-internal');
  
        function showTab(tab, content, rect) {
            externalContent.classList.add('hidden');
            internalContent.classList.add('hidden');
            externalRect.classList.add('hidden');
            internalRect.classList.add('hidden');
  
            content.classList.remove('hidden');
            rect.classList.remove('hidden');
        }
  
        externalTab.addEventListener('click', function () {
            showTab(externalTab, externalContent, externalRect);
        });
  
        internalTab.addEventListener('click', function () {
            showTab(internalTab, internalContent, internalRect);
        });
  
        showTab(externalTab, externalContent, externalRect);
  
        function setupImageClickHandler(container, mainImage) {
            const images = container.querySelectorAll('.gallery-main-scroll-image');
            images.forEach(image => {
                image.addEventListener('click', function () {
                    const newImageSrc = image.getAttribute('data-image-src');
                    if (newImageSrc) {
                        mainImage.src = newImageSrc;
                    }
                });
            });
        }
  
        setupImageClickHandler(externalContent, mainImg);
        setupImageClickHandler(internalContent, mainImgInternal);
    });
</script>

{% schema %}
  {
    "name": "approved-gallery",
    "settings": [
      {
        "type": "text",
        "id": "tab_external",
        "default": "External",
        "label": "Tab External Text"
      }, {
        "type": "text",
        "id": "tab_internal",
        "default": "Internal",
        "label": "Tab Internal Text"
      }
    ]
  }
{% endschema %}