<!-- future events sections -->
<div class="w-full h-auto min-h-[100vh] relative overflow-x-hidden mb-[100px]">


  <div class="w-full h-auto flex flex-col items-start justify-center p-10">
    <div class="container-main w-auto h-auto flex flex-col items-start justify-start gap-y-10 transition-all duration-250 ease-in">

      <div class="w-auto h-auto">
        <img
          class="w-[640px] h-[480px] object-center object-cover rounded-2xl"
          src="{{ section.settings.section_image |  img_url: 'master' }}"
          alt="{{ section.settings.section_image.alt }}">
      </div>

      {% if section.settings.main_title != blank and section.settings.subheading != blank and
 section.settings.cta_text != blank %}
        <div class="w-auto h-auto flex flex-col items-start justify-center gap-y-7">
          <h2 class="text-[48px] leading-[48px] font-semibold">{{ section.settings.main_title }}</h2>
          <h3 class="text-[32px] leading-[38px] max-w-[550px]">{{ section.settings.subheading }}</h3>
          <div class="w-auto h-auto">
            <div class="w-[220px] h-[48px] bg-black flex items-center justify-center rounded-xl p-3 cursor-pointer">
              <p class="text-[16px] leading-[16px] text-white">{{ section.settings.cta_text }}</p>
            </div>
          </div>
        </div>
      {% endif %}

    </div>
  </div>

  <div class="container-articles w-full h-auto absolute left-[40%] top-1/2 -translate-y-1/2 transition-all duration-250 ease-in flex flex-col items-start justify-center gap-y-10">

    <div class="container-controls w-full h-auto items-center justify-end hidden">
      <div class="w-auto h-auto flex flex-row items-start justify-between gap-x-6 pr-10">
        <div class="w-[56px] h-[56px] rounded-full bg-[#F7F7F7] arrow-left flex items-center justify-center cursor-pointer">
          {% render 'arrow-left-icon' %}
        </div>
        <div class="w-[56px] h-[56px] rounded-full bg-[#F7F7F7] arrow-right flex items-center justify-center cursor-pointer">
          {% render 'arrow-right-icon' %}
        </div>
      </div>
    </div>

    <div class="w-full h-auto overflow-x-hidden">
      <div class="containers-card w-auto h-auto flex flex-row items-center justify-start gap-x-4 cursor-pointer overflow-x-auto px-10">
        {% for article in blogs['events'].articles %}
          {% if article.tags contains 'Future' %}
            <div class="event-card w-[380px] h-[560px] rounded-[32px] p-10 flex flex-col items-start justify-between relative">

              <img
                class="absolute left-0 top-0 right-0 bottom-0 object-center object-cover w-full h-full z-0 rounded-[32px]"
                src="{{ article.image |  img_url: 'master' }}"
                alt="">
              <div class="absolute left-0 top-0 right-0 bottom-0 w-full h-full z-10 rounded-[32px]" style="background: linear-gradient(0deg, rgba(0, 0, 0, 0.20) 0%, rgba(0, 0, 0, 0.20) 100%);"></div>

              <div class="w-full h-full flex flex-col items-start justify-start gap-y-6 z-20">
                <h3 class="text-[24px] leading-[30px] font-bold text-white">{{ article.title }}</h3>
                <div class="w-full h-auto flex flex-col items-start justify-center rounded-2xl px-4 py-6 gap-y-4 border border-white backdrop:blur-[10px]" style="background: rgba(0, 0, 0, 0.50);">

                  <div class="w-full h-auto flex flex-row items-center justify-start gap-x-4">

                    <div class="w-full h-auto flex flex-row items-center gap-x-1 justify-between">
                      {% render 'time-icon' %}
                      <p class="text-white text-[16px] leading-[14px] whitespace-nowrap">{{ article.metafields.custom.range_date.value }}</p>
                    </div>

                    <div class="w-full h-auto flex flex-row items-center gap-x-1 justify-between">
                      {% render 'country-icon' %}
                      <p class="text-white text-[16px] leading-[14px] whitespace-nowrap">{{ article.metafields.custom.article_location.value }}</p>
                    </div>

                  </div>


                  <div class="w-full h-auto flex flex-row items-center justify-start gap-x-2"></div>
                </div>
              </div>

              <div class="w-full h-auto flex items-center justify-center z-20">
                <div class="w-full h-[48px] px-2 py-4 rounded-lg bg-white flex items-center justify-center cursor-pointer">
                  <p class="text-[16px] leading-[14px]">{{ section.settings.cta_text_card }}</p>
                </div>
              </div>
            </div>
          {% endif %}
        {% endfor %}
      </div>
    </div>

  </div>

</div>

{% style %}
  .arrow-left.disabled,
  .arrow-right.disabled {
    pointer-events: none;
    opacity: 0.3;
  }
{% endstyle %}

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const containerArticles = document.querySelector('.container-articles');
        const textContainer = document.querySelector('.container-main');
        const containerControls = document.querySelector('.container-controls');
        const containerCards = document.querySelector('.containers-card');
        const eventCards = document.querySelectorAll('.event-card');
        const arrowLeft = document.querySelector('.arrow-left');
        const arrowRight = document.querySelector('.arrow-right');
  
        let currentOffset = 0;
  
        containerArticles.addEventListener('mouseover', () => {
            textContainer.classList.add('opacity-0');
            setTimeout(() => {
                // containerArticles.style.left = `${parseInt(window.getComputedStyle(textContainer.parentElement).getPropertyValue('padding-left'), 10)}px`;
                containerArticles.style.left = '0';
                textContainer.parentElement.style.display = 'none';
                textContainer.remove();
                containerControls.classList.add('flex');
                containerControls.classList.remove('hidden');
            }, 100)
        }, {once: true})
  
        arrowLeft.addEventListener('click', () => {
            handleScroll(-1)
        });
  
        arrowRight.addEventListener('click', () => {
            handleScroll(1)
        });
  
  
        updateArrowState();
  
        function updateArrowState() {
            if (containerCards.scrollLeft === 0) {
                arrowLeft.classList.add('disabled');
            } else {
                arrowLeft.classList.remove('disabled');
            }
        }
  
  
  
        function handleScroll(direction) {
            const cardWidth = eventCards[0].getBoundingClientRect().width;
            const maxScroll = containerCards.scrollWidth - containerCards.clientWidth;
  
            let currentScroll = containerCards.scrollLeft;
  
            currentScroll += direction * cardWidth;
  
            if (currentScroll < 0) {
                currentScroll = 0;
                arrowLeft.classList.add('disabled');
            } else {
                arrowLeft.classList.remove('disabled');
            }
            if (currentScroll > maxScroll) {
                currentScroll = maxScroll;
                arrowRight.classList.add('disabled');
            } else {
                arrowRight.classList.remove('disabled');
            }
  
            containerCards.scrollTo({
                left: currentScroll,
                behavior: 'smooth'
            });
        }
  
  
    })
</script>

{% schema %}
  {
    "name": "future-events",
    "settings": [
      {
        "type": "text",
        "id": "main_title",
        "label": "Main title"
      },
      {
        "type": "text",
        "id": "subheading",
        "label": "Subheading title"
      },
      {
        "type": "text",
        "id": "cta_text",
        "label": "Cta text"
      },
      {
        "type": "image_picker",
        "id": "section_image",
        "label": "Section Main Image"
      }, {
        "type": "text",
        "id": "cta_text_card",
        "label": "Cta text card"
      }
    ]
  }
{% endschema %}