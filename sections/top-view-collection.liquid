<!--top view collection page-->
<div class="w-full h-auto flex flex-col items-center justify-start gap-y-10 px-6 mt-[50px]">

    <!--container collection title-->
    <div class="w-auto h-auto">
        <p class="text-[40px] leading-[40px] text-center">{{ section.settings.main_title | default: "Experience the" }}
            {{ collection.title }}</p>
    </div>

    <!--container badge product collection-->
    <div class="w-full h-auto flex items-center justify-center relative">
        <div
            class="badge-container w-auto h-auto bg-[#EFEEED] rounded-full flex flex-row items-center justify-start gap-x-2 p-1 relative">
            {% for product in collection.products %}
            <div class="w-[61px] min-w-[61px] h-[38px] min-h-[38px] flex items-center justify-center p-badge z-10"
                data-attribute="{{ product.title }}" data-index="{{ forloop.index0 }}">
                <p class="body-16">{{ product.title | replace: "Pardo", ""}}</p>
            </div>
            {% endfor %}
            <!--moving badge here-->
            <div class="w-[61px] min-w-[61px] h-[38px] min-h-[38px] absolute left-1 top-1 z-0 bg-white rounded-full">
            </div>
        </div>
    </div>
</div>


<!--container product image-->
<div class="w-full h-auto relative">
    {% for product in collection.products %}
    {% if product.images.size > 0 %}
    {% assign firstImage = product.images[0] %}
    <div class="w-full h-[268px] min-h-[268px] relative product-image z-10" data-index="{{ forloop.index0 }}"
        style="display: {% if forloop.index0 == 0 %} block {% else %} none {% endif %};">
        <img src="{{ firstImage | img_url: 'master' }}" alt="{{ product.title }}"
            class="w-full h-full object-contain object-center" data-attribute="{{ product.title }}">
    </div>
    {% endif %}
    {% endfor %}

    <!--layer blur-->
    <div
        class="w-[372px] h-[135px] rounded-[372px] bg-[#A9A09E] blur-[80px] absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2">
    </div>
    <!--square white-->
    <div class="w-full h-[205px] bg-white absolute left-0 top-1/2 z-0"></div>
</div>

<!--scroll-info-collection-->
<div class="w-full h-auto flex items-center justify-center flex-col gap-y-4 relative -translate-y-10 z-20">
    <!--scroll info heading container-->
    <div class="auto h-auto flex flex-col items-center justify-center gap-y-4">
        <p class="text-[24px] leading-[40px]">{{ section.settings.scroll_info_little_title | default: "Open the world"
            }}</p>
        <p class="text-[40px] leading-[40px]">{{ section.settings.scroll_info_main_title | default: "Adventure & Ocean"
            }}</p>
    </div>

    <!--scroll info container badges-->
    <div
        class="product-details-magnetic-scroll w-[calc(100%+2rem)] px-6 py-6 h-auto flex flex-row items-center justify-start gap-x-3 overflow-x-auto lg:w-[calc(100%+5rem)] lg:px-10 lg:-mx-10">
        {% assign productMetafieldsValues = 'top_speed,lenght,dry_weight' | split: ',' %}
        {% for productMetafieldsValue in productMetafieldsValues %}
        {% assign metafieldCustom = product.metafields.custom[productMetafieldsValue].value %}
        <div
            class="product-details-badge flex min-w-[127px] h-auto p-4 flex-col items-center justify-center gap-y-1 rounded-xl bg-[#EFEEED] flex-shrink-0 lg:h-[100px] lg:flex-1">
            <p class="body-14 text-nowrap">{{ metafieldCustom }}</p>
            <p class="body-12 text-[var(--hover-color)]">{{ productMetafieldsValue | replace: '_', ' ' | upcase
                }}
            </p>
        </div>
        {% endfor %}
    </div>

</div>



<script>
    document.addEventListener('DOMContentLoaded', function () {
        const badges = document.querySelectorAll('.p-badge');
        const productImages = document.querySelectorAll('.product-image');
        const movingBadge = document.querySelector('.badge-container .z-0');

        function calculateBadgeGap() {
            if (badges.length < 2) return 0;
            const firstBadge = badges[0].getBoundingClientRect();
            const secondBadge = badges[1].getBoundingClientRect();
            return secondBadge.left - firstBadge.right;
        }

        function showProductImage(index) {
            productImages.forEach(img => img.style.display = 'none');
            productImages[index].style.display = 'block';
        }

        function moveBadge(index) {
            const badgeGap = calculateBadgeGap();
            const selectedBadge = badges[index];
            const badgeContainer = selectedBadge.parentNode;
            const badgeRect = selectedBadge.getBoundingClientRect();
            const containerRect = badgeContainer.getBoundingClientRect();

            const offsetX = badgeRect.left - containerRect.left + (selectedBadge.offsetWidth / 2) - (movingBadge.offsetWidth / 2) - badgeGap / 2;

            movingBadge.style.transform = `translate(${offsetX}px`;
            movingBadge.style.transition = "transform 0.3s ease";
        }

        badges.forEach((badge, index) => {
            badge.addEventListener('click', function () {
                showProductImage(index);
                moveBadge(index);
            });
        });

        showProductImage(0);
        moveBadge(0);
    });
</script>