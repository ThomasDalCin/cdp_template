<!--container badge product collection-->
<div class="w-full h-auto flex items-center justify-center relative">
    <div
        class="badge-container w-auto h-auto bg-[#EFEEED] rounded-full flex flex-row items-center justify-start gap-x-2 p-1 relative">
        {% for product in collection.products %}
        <div class="w-[61px] min-w-[61px] h-[38px] min-h-[38px] flex items-center justify-center p-badge z-10"
            data-attribute="{{ product.title }}" data-index="{{ forloop.index0 }}" onclick="selectBadge({{ forloop.index0 }})">
            <p class="body-16">{{ product.title | replace: "Pardo", ""}}</p>
        </div>
        {% endfor %}
        <!--moving badge here-->
        <div class="w-[61px] min-w-[61px] h-[38px] min-h-[38px] absolute left-1 top-1 z-0 bg-white rounded-full">
        </div>
    </div>
</div>

<!--container product image-->
<div class="w-full h-auto relative">
    {% for product in collection.products %}
    {% if product.images.size > 0 %}
    {% assign firstImage = product.images[0] %}
    <div class="w-full h-[268px] min-h-[268px] relative product-image z-10" data-index="{{ forloop.index0 }}"
        style="display: {% if forloop.index0 == 0 %} block {% else %} none {% endif %};">
        <img src="{{ firstImage | img_url: 'master' }}" alt="{{ product.title }}"
            class="w-full h-full object-contain object-center" data-attribute="{{ product.title }}">
    </div>
    {% endif %}
    {% endfor %}

    <!--layer blur-->
    <div
        class="w-[372px] h-[135px] rounded-[372px] bg-[#A9A09E] blur-[80px] absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2">
    </div>
    <!--square white-->
    <div class="w-full h-[205px] bg-white absolute left-0 top-1/2 z-0"></div>

    <!--produt badge-->
    <div class="w-full h-auto flex items-center justify-center absolute left-0 right-0 bottom-12 z-10">
        {% for product in collection.products %}
        <a href="{{ product.url }}" class="product-cta" data-index="{{ forloop.index0 }}"
            style="display: {% if forloop.index0 == 0 %} block {% else %} none {% endif %};">
            <div class="cta-transparent-round w-[113px] h-auto max-h-[36px]">
                <p class="body-14 tt-norms-pro-reg">{{ section.settings.product_cta | default: "Discover " }} {{ product.title | replace: "Pardo", ""}}</p>
            </div>
        </a>
        {% endfor %}
    </div>
</div>

<!--scroll-info-collection-->
<div class="w-full h-auto flex items-center justify-center flex-col gap-y-4 relative z-20 overflow-x-hidden">
    <!--scroll info heading container-->
    <div class="auto h-auto flex flex-col items-center justify-center gap-y-4">
        <p class="text-[24px] leading-[40px]">{{ section.settings.scroll_info_little_title | default: "Open the world"
            }}</p>
        <p class="text-[40px] leading-[40px]">{{ section.settings.scroll_info_main_title | default: "Adventure & Ocean"
            }}</p>
    </div>

    <!--scroll info container badges-->
    <div
        class="product-details-magnetic-scroll w-[calc(100%+2rem)] px-6 py-6 h-auto flex flex-row items-center justify-start gap-x-3 overflow-x-auto lg:w-[calc(100%+5rem)] lg:px-10 lg:-mx-10">
        {% assign productMetafieldsValues = 'top_speed,lenght,dry_weight' | split: ',' %}
        {% for productMetafieldsValue in productMetafieldsValues %}
        {% assign metafieldCustom = product.metafields.custom[productMetafieldsValue].value %}
        <div
            class="product-details-badge flex min-w-[127px] h-auto p-4 flex-col items-center justify-center gap-y-1 rounded-xl bg-[#EFEEED] flex-shrink-0 lg:h-[100px] lg:flex-1">
            <p class="body-14 text-nowrap">{{ metafieldCustom }}</p>
            <p class="body-12 text-[var(--hover-color)]">{{ productMetafieldsValue | replace: '_', ' ' | upcase
                }}
            </p>
        </div>
        {% endfor %}
    </div>

</div>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        const badges = document.querySelectorAll('.p-badge');
        const productImages = document.querySelectorAll('.product-image');
        const productCtas = document.querySelectorAll('.product-cta');
        const movingBadge = document.querySelector('.badge-container .z-0');

        // Calcola il gap tra i badge
        function calculateBadgeGap() {
            if (badges.length < 2) return 0;
            const firstBadge = badges[0].getBoundingClientRect();
            const secondBadge = badges[1].getBoundingClientRect();
            return secondBadge.left - firstBadge.right;
        }

        // Mostra l'immagine del prodotto selezionato
        function showProductImage(index) {
            productImages.forEach((img, i) => {
                img.style.display = i === index ? 'block' : 'none';
            });
        }

        // Mostra il CTA del prodotto selezionato
        function showProductCta(index) {
            productCtas.forEach((cta, i) => {
                cta.style.display = i === index ? 'block' : 'none';
            });
        }

        // Sposta il badge mobile sotto il badge selezionato
        function moveBadge(index) {
            const badgeGap = calculateBadgeGap();
            const selectedBadge = badges[index];
            const badgeContainer = selectedBadge.parentNode;
            const badgeRect = selectedBadge.getBoundingClientRect();
            const containerRect = badgeContainer.getBoundingClientRect();

            // Calcola l'offset X
            const offsetX =
                badgeRect.left -
                containerRect.left +
                selectedBadge.offsetWidth / 2 -
                movingBadge.offsetWidth / 2 -
                badgeGap / 2;

            // Anima il movimento del badge
            requestAnimationFrame(() => {
                movingBadge.style.transform = `translate(${offsetX}px)`;
                movingBadge.style.transition = "transform 0.3s ease";
            });
        }

        // Inizializza badge, immagini e CTA
        function initialize() {
            badges.forEach((badge, index) => {
                badge.addEventListener('click', () => {
                    showProductImage(index);
                    showProductCta(index);
                    moveBadge(index);
                });
            });

            // Mostra il primo prodotto e il suo CTA di default
            showProductImage(0);
            showProductCta(0);
            moveBadge(0);
        }

        initialize();
    });
</script>

