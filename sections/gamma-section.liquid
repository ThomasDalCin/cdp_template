<!-- gamma section new -->
<div class="w-full h-auto py-14 bg-[#A9A09E] overflow-x-hidden">
    <div class="w-full h-auto flex flex-col items-start justify-center gap-y-6">
        <div class="w-full h-auto flex flex-col items-start justify-center gap-y-10">

            <!-- tab wrapper -->
            <div class="w-full h-auto flex flex-row items-center justify-start px-6 gap-x-6 relative wrap-content overflow-x-auto">
                <div class="w-auto max-w-[99px] h-auto tab-gamma" id="Models">
                    <p class="text-[18px] leading-[24px] satoshi text-nowrap tab-text">Models</p>
                </div>
                {% assign sorted_collections = collections | sort: 'published_at' %}
                {% for collection in sorted_collections %}
                    {% if collection.title != "Pardo approved" %}
                        <div class="w-auto max-w-[99px] h-auto tab-gamma" id="{{ collection.title }}">
                            <p class="text-[18px] leading-[24px] satoshi text-nowrap tab-text">{{ collection.title | capitalize }}</p>
                        </div>
                    {% endif %}
                {% endfor %}
                <!-- union icon -->
                <div class="union-icon w-auto h-auto absolute transition-all duration-200 ease-in -top-4">
                    {% render 'union-icon' %}
                </div>
            </div>

            <!-- model wrapper -->
            {% for collection in sorted_collections %}
                {% if collection.title != "Pardo approved" %}
                    <div class="magnetic-scroll gamma-scroll w-auto h-[147px] max-h-[147px] py-6 overflow-x-auto scroll-smooth flex flex-row justify-start items-center snap-x snap-mandatory"
                        data-collection="{{ collection.title }}" style="display: none; padding-left: 56px;">
                        {% for product in collection.products %}
                            {% assign product_images = product.images %}
                            {% if product_images.size > 0 %}
                                {% assign model_image = product_images[0] %}
                                <div class="image-scroll w-[320px] h-full flex-shrink-0 flex flex-col items-center justify-center snap-start relative"
                                    data-collection="{{ collection.title }}" data-content="{{ product.title }}">
                                    <img class="w-full h-full object-cover pImage z-10" src="{{ model_image | img_url: 'master' }}"
                                        alt="{{ model_image.alt }}">
                                    <div class="w-full h-auto flex items-center justify-center left-0 -bottom-[10px] right-0 absolute z-20">
                                        <p class="text-[64px] leading-[48px]">{{ product.title | replace: 'Pardo', '' }}</p>
                                    </div>
                                </div>
                            {% endif %}
                        {% endfor %}
                        <div class="w-full h-[240px] flex-shrink-0 flex"></div>
                    </div>
                {% endif %}
            {% endfor %}

            <!-- model wrapper for "Models" -->
            <div class="magnetic-scroll gamma-scroll w-auto h-[147px] max-h-[147px] py-6 overflow-x-auto scroll-smooth flex flex-row justify-start items-center snap-x snap-mandatory"
                data-collection="Models" style="display: flex; padding-left: 56px;">
                {% for collection in sorted_collections %}
                    {% if collection.title != "Pardo approved" %}
                        {% for product in collection.products %}
                            {% assign product_images = product.images %}
                            {% if product_images.size > 0 %}
                                {% assign model_image = product_images[0] %}
                                <div class="image-scroll w-[320px] h-full flex-shrink-0 flex flex-col items-center justify-center snap-start relative"
                                    data-collection="Models" data-content="{{ product.title }}">
                                    <img class="w-full h-full object-cover pImage z-10" src="{{ model_image | img_url: 'master' }}"
                                        alt="{{ model_image.alt }}">
                                    <div class="w-full h-auto flex items-center justify-center left-0 -bottom-[10px] right-0 absolute z-20">
                                        <p class="text-[64px] leading-[48px]">{{ product.title | replace: 'Pardo', '' }}</p>
                                    </div>
                                </div>
                            {% endif %}
                        {% endfor %}
                    {% endif %}
                {% endfor %}
                <div class="w-full h-[240px] flex-shrink-0 flex"></div>
            </div>

        </div>

        <!--title + buttons-->
        <div class="w-full h-auto flex flex-col items-start justify-center px-6">
            <!--product description content -->
            {% for collection in sorted_collections %}
                {% if collection.title != "Pardo approved" %}
                    {% for product in collection.products %}
                        <div class="w-full h-auto flex items-start justify-center gap-y-4 flex-col details-content"
                            data-content="{{ product.title }}">
                            <div class="w-full h-[56px]">
                                <a href="{{ product.url }}" class="w-full h-auto cta-black">{{ section.settings.cta_gamma_product |
                                    default: "Discover" }}</a>
                            </div>
                            <div class="w-full h-[56px]">
                                <a href="pages/delear" class="w-full h-auto cta-transparent">{{ section.settings.cta_gamma_delear |
                                    default: "Find a delear" }}</a>
                            </div>
                        </div>
                    {% endfor %}
                {% endif %}
            {% endfor %}
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const tabs = document.querySelectorAll('.tab-gamma');
        const gammaScrolls = document.querySelectorAll('.gamma-scroll');
        const unionIcon = document.querySelector('.union-icon');
        const detailsWrap = document.querySelectorAll('.details-content');
        const imageScroll = document.querySelectorAll('.image-scroll');
        const mainWrap = document.querySelector('.wrap-content');

        // Get the rect of the main wrapper to compare positions
        const mainWrapRect = mainWrap.getBoundingClientRect();

        // Funzione per mostrare il details-content in base all'immagine visibile
        function showDetailsContentForVisibleImage() {
            imageScroll.forEach((image) => {
                const imageData = image.getAttribute('data-content');
                const imageRect = image.getBoundingClientRect();

                if (imageRect.left == mainWrapRect.left ) {
                    detailsWrap.forEach(content => {
                        if (content.getAttribute('data-content') === imageData) {
                            content.style.display = 'flex';
                        } else {
                            content.style.display = 'none';
                        }
                    });
                }
            });
        }

        // Ascolta lo scroll del gammaScroll
        gammaScrolls.forEach((gammaScroll) => {
            gammaScroll.addEventListener('scroll', () => {
                showDetailsContentForVisibleImage();
            });
        });

        // Aggiungi un event listener a ogni tab
        tabs.forEach(tab => {
            tab.addEventListener('click', function () {
                const collectionId = tab.id;

                // Nascondi tutti i gamma-scroll
                gammaScrolls.forEach(container => {
                    container.style.display = 'none';
                });

                detailsWrap.forEach((content) => {
                    content.style.display = 'none'; // Nascondi tutti i dettagli
                });

                // Mostra solo il gamma-scroll corrispondente alla collezione selezionata
                gammaScrolls.forEach(container => {
                    const scrollCollection = container.getAttribute('data-collection');
                    if (scrollCollection === collectionId) {
                        container.style.display = 'flex';
                    }
                });

                // Aggiorna lo stile del tab attivo
                tabs.forEach(t => {
                    t.classList.remove('active-tab');
                    t.querySelector('.tab-text').classList.add('text-white'); // Rimuove la classe 'text-white' da tutte le tab
                });
                tab.classList.add('active-tab');
                tab.querySelector('.tab-text').classList.remove('text-white'); // Aggiunge la classe 'text-black' alla tab attiva

                // Calcola la posizione della tab attiva
                const tabRect = tab.getBoundingClientRect();
                const wrapperRect = tab.parentElement.getBoundingClientRect();
                const iconOffset = (tabRect.left - wrapperRect.left) + (tab.offsetWidth / 2 - unionIcon.offsetWidth / 2);

                // Sposta l'icona
                if (unionIcon.offsetWidth) {
                    unionIcon.style.left = `${iconOffset}px`;
                }

                showDetailsContentForVisibleImage();
            });
        });

        // Mostra i prodotti della prima collezione e posiziona l'icona all'avvio
        if (tabs.length > 0) {
            tabs[0].click();

            // Centra l'icona sulla prima tab dopo aver simulato il click
            const firstTabRect = tabs[0].getBoundingClientRect();
            const wrapperRect = tabs[0].parentElement.getBoundingClientRect();
            const initialIconOffset = (firstTabRect.left - wrapperRect.left) + (tabs[0].offsetWidth / 2 - unionIcon.offsetWidth / 2);
            unionIcon.style.left = `${initialIconOffset}px`;
        }

        // Esegui il controllo anche al caricamento per la prima immagine visibile
        showDetailsContentForVisibleImage();
    });
</script>

<style>
    .tab-text {
        color: white;
        transition: color 0.3s ease;
    }

    .tab-gamma.active-tab .tab-text {
        color: black;
    }

    .tab-gamma:hover .tab-text {
        color: #000;
    }
    .magnetic-scroll {
    position: relative;
    overflow-x: auto;
    overflow-y: hidden;
}
</style>
