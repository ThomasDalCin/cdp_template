<!-- home video section -->
<div class="w-full h-[620px] min-h-[620px] relative lg:h-[960px] lg:min-h-[960px]">

  <!-- video container -->
  <div class="w-full h-full absolute inset-0 z-0 overflow-hidden">
    <video class="w-full h-full object-cover object-center" id="player" playsinline controls muted
      data-poster="{{ section.settings.video_cover_image | img_url: 'master'}}">
      <source src="https://cdn.shopify.com/videos/c/o/v/1e91aeabdb1e40eaa6686b18cee80b64.mp4" type="video/mp4" />
    </video>
  </div>

  <!-- video cover image overlay container -->
  <div class="w-full h-full absolute inset-0 brightness-75 z-10 overlay-video-wrap">
    <img src="{{ section.settings.video_cover_image | img_url: 'master' }}"
      alt="{{ section.settings.video_cover_image.alt }}" class="w-full h-full object-cover object-center">
  </div>

  <!-- draggable content icon -->
  <div
    class="w-auto h-auto absolute left-1/2 bottom-10 -translate-x-1/2 -translate-y-10 z-20 flex flex-col items-center justify-center gap-y-6">
    <p class="body-16 text-white text-center text-nowrap overlay-text">{{ section.settings.draggable_text }}</p>
    <div class="w-auto h-auto draggable-icon">
      {% render 'fab-icon' %}
    </div>
  </div>

</div>


<style>
  :root {
    --plyr-color-main: white;
    --plyr-range-track-height: 2px;
    --plyr-video-controls-background: transparent;
    --plyr-video-control-background-hover: transparent;
  }

  video {
    object-fit: cover;
    /* Assicura che l'immagine copra tutta l'area */
    object-position: center center;
    /* Centra l'immagine */
    width: 100%;
    /* L'immagine copre tutta la larghezza */
    height: 100%;
    /* L'immagine copre tutta l'altezza */
  }

  .plyr {
    width: 100% !important;
    height: 100% !important;
    object-fit: cover;
    object-position: center;
  }

  .plyr__controls {
    padding: 12px !important;
    margin: 16px !important;
    border-radius: 8px !important;
    background: rgba(0, 0, 0, 0.15) !important;
    backdrop-filter: blur(40px)!important;

  }

  .plyr__poster {
    background-size: cover !important;
  }

  /* Stili per lo switch button (rimosso in questa versione) */
  .switch {
    position: relative;
    display: inline-block;
    width: 80px;
    height: 48px;
  }

  .switch input {
    opacity: 0;
    width: 0;
    height: 0;
  }

  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #EFEEED;
    padding: 4px;
    transition: all 0.4s ease;
    border-radius: 50px;
    display: flex;
    align-items: center;
    justify-content: flex-start;
  }

  input:checked+.slider {
    justify-content: flex-end;
  }

  .mute-icon {
    transition: transform 0.4s ease;
  }

  input:checked+.slider .mute-icon {
    transform: translateX(32px);
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Gsap plugin
    gsap.registerPlugin(Draggable);
    const timeline = gsap.timeline();

    // Get elements
    const draggableIcon = document.querySelector('.draggable-icon');
    const overlayVideoWrap = document.querySelector('.overlay-video-wrap');
    const overlayText = document.querySelector('.overlay-text');

    // Get video element
    const videoPlayer = document.getElementById('player');

    // Initialize Plyr
    const plyr = new Plyr(videoPlayer, {
      controls: ['play', 'progress', 'current-time', 'duration', 'duration']
    });

    // Gsap draggable
    const draggableIconRect = draggableIcon.getBoundingClientRect();
    const overlayRect = overlayVideoWrap.getBoundingClientRect();
    const startingPosition = overlayRect.bottom - draggableIconRect.bottom;

    let overlayOffsetY = ((overlayVideoWrap.clientHeight / 2) - startingPosition - (draggableIcon.clientHeight / 2));
    overlayOffsetY = -overlayOffsetY;

    Draggable.create(draggableIcon, {
      type: "y",
      inertia: true,
      bounds: {minY: 0, maxY: overlayOffsetY},

      onDrag: function () {
        if (this.y === overlayOffsetY) {
          gsap.to(draggableIcon, {
            opacity: 0,
            duration: 0.4,
            onComplete: function () {
              draggableIcon.style.display = 'none';
            }
          });
          timeline
            .to(overlayText, {opacity: 0, duration: 0.4})
            .to(overlayVideoWrap, {opacity: 0, duration: 0.4})
            .to(overlayVideoWrap, {display: "none"});

          this.disable();
        }
      },
    });
  });
</script>

{% schema %}
{
"name": "video-home",
"settings": [
{
"type": "image_picker",
"id": "video_cover_image",
"label": "Video Cover Image",
"info": "Choose The Video Cover Image"
},
{
"type": "text",
"id": "draggable_text",
"label": "Draggable Text",
"info": "Set the draggable text",
"default": "Trascina per sbloccare un sogno"
}
]
}
{% endschema %}