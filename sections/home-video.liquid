<!-- home video section -->
<!-- video cover container -->
<div class="w-full h-[620px] min-h-[620px] relative">

  <!-- video container -->
  <div class="w-full h-full absolute inset-0 z-0">
    <!-- video container html -->
    <video
      id="player"
      playsinline
      controls
      data-poster="/path/to/poster.jpg">
      <source src="{{ section.settings.video_source |  video_tag }}" />

      <!-- Captions are optional -->
      <track
        kind="captions"
        label="English captions"
        src="/path/to/captions.vtt"
        srclang="en"
        default />
    </video>
  </div>


  <!-- video cover image overlay container -->
  <div class="w-full h-full absolute inset-0 brightness-75 z-10 overlay-video-wrap">
    <img
      src="{{ section.settings.video_cover_image |  img_url: 'master' }}"
      alt="{{ section.settings.video_cover_image.alt }}"
      class="w-full h-full object-cover object-center">
  </div>

  <!-- draggable content icon -->
  <div class="w-auto h-auto absolute left-1/2 bottom-10 -translate-x-1/2 -translate-y-10 z-20 flex flex-col items-center justify-center gap-y-6">
    <p class="body-16 text-white text-center text-nowrap overlay-text">{{ section.settings.draggable_text }}</p>
    <!-- draggable icon svg -->
    <div class="w-auto h-auto draggable-icon">
      {% render 'fab-icon' %}
    </div>
  </div>

</div>

<style>

.plyr {
  width: 100% !important;
  height: 100% !important;
}

:root{
  --plyr-color-main: white;
}

</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    //register plugin gsap
    gsap.registerPlugin(Draggable);
    const timeline = gsap.timeline();

    const draggableIcon = document.querySelector('.draggable-icon');
    const overlayVideoWrap = document.querySelector('.overlay-video-wrap');
    const overlayText = document.querySelector('.overlay-text');

    //get the rect elements
    const draggableIconRect = draggableIcon.getBoundingClientRect();
    const overlayRect = overlayVideoWrap.getBoundingClientRect();

    //get the starting position
    const startingPosition = overlayRect.bottom - draggableIconRect.bottom;

    //set the offset on ass y
    let overlayOffsetY = ((overlayVideoWrap.clientHeight / 2) - startingPosition - (draggableIcon.clientHeight / 2));
    overlayOffsetY = -overlayOffsetY;

  

    //handle draggable icon
    Draggable.create(draggableIcon, {
      type: "y",
      inertia: true,
      bounds: { minY: 0, maxY: overlayOffsetY },
      onDragEnd: function () {
        timeline
          .to(overlayText, {
            opacity: 0,
            duration: 0.4,
          })
          .to(overlayVideoWrap, {
            opacity: 0,
            duration: 0.4,
          })
          .to(overlayVideoWrap, {
            display: "none",
          });
      },
    });

    //Plyr
    const videoPlayer = document.getElementById('player');
    const plyr = new Plyr(videoPlayer, {
      controls: ['progress', 'current-time', 'duration']
    });
  });
</script>


{% schema %}
  {
    "name": "video-home",
    "settings": [
      {

        "type": "image_picker",
        "id": "video_cover_image",
        "label": "Video Cover Image",
        "info": "Choose The Video Cover Image"
      }, {
        "type": "video",
        "id": "video_source",
        "label": "Video HomePage",
        "info": "Choose The Video Source"
      }, {
        "type": "text",
        "id": "draggable_text",
        "label": "draggable text",
        "info": "Set the draggable text",
        "default": "Trascina per sbloccare un sogno"
      }
    ]
  }
{% endschema %}

