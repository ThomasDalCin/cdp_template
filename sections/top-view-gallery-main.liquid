<div class="top-section-gallery w-full h-auto flex flex-col gap-y-2 items-center justify-start p-4 mt-[56px]">

  <!-- Tab section -->
  <div class="tab-section w-full h-auto flex flex-row items-center justify-start mb-7">
    <div class="tab-content flex-1 h-auto flex items-center justify-center relative p-2 cursor-pointer"
      id="external-tab">
      <p class="body-14">External</p>
      <div
        class="tab-rect absolute left-1/2 bottom-0 -translate-x-1/2 -translate-y-1/2 w-[16px] h-[1px] bg-black transition-transform duration-300 ease-in-out">
      </div>
    </div>
    <div class="tab-content flex-1 h-auto flex items-center justify-center relative p-2 cursor-pointer"
      id="internal-tab">
      <p class="body-14">Internal</p>
      <div
        class="tab-rect absolute left-1/2 bottom-0 -translate-x-1/2 -translate-y-1/2 w-[16px] h-[1px] bg-black hidden transition-transform duration-300 ease-in-out">
      </div>
    </div>
  </div>

  {% assign external_gallery = product.metafields.custom.external_images_boat.value %}
  {% assign internal_gallery = product.metafields.custom.internal_boat_up.value %}

  <!-- External gallery section -->
  <div class="container-gallery w-full h-auto flex flex-col items-center justify-start gap-y-2 hidden"
    id="external-content" data-attribute="external-gallery">
    <div class="video-container w-full h-auto relative">
      {% if external_gallery %}
      {% assign external_images = "boat_video,boat_image_one,boat_image_two,boat_image_three,boat_image_four" | split: "," %}
      {% assign external_video = external_images[0] %}
      {% assign productVideo = external_gallery[external_video] %}

      {% if productVideo %}
      <video id="productVideo" class="video w-full h-[220px] rounded-lg" preload="metadata" muted
        poster="{{ productVideo | img_url: 'master' }}">
        <source src="{{ productVideo | file_url }}" type="video/mp4">
      </video>
      <div id="playButton" class="video-settings absolute inset-0 flex items-center justify-center cursor-pointer">
        <svg class="w-12 h-12 text-white fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
          <path d="M8 5v14l11-7z" />
        </svg>
      </div>
      {% else %}
      {% assign first_image = external_gallery[external_images[1]] %}
      <img src="{{ first_image | img_url: 'master' }}" class="w-full h-[220px] rounded-lg object-cover"
        alt="Fallback image">
      {% endif %}
      {% endif %}
    </div>

    <div class="w-full max-h-[220px] h-auto">
      <div class="flex flex-row items-center justify-start overflow-x-auto space-x-2 h-auto">
        {% for external_image in external_images %}
        {% assign external_img = external_gallery[external_image] %}
        <div class="container-magnetic-scroll w-[165px] h-[128px] flex-shrink-0">
          <img src="{{ external_img | img_url: 'master' }}" class="w-full h-full object-cover rounded-lg" alt=""
            data-external-src="{{ external_img | img_url: 'master' }}">
        </div>
        {% endfor %}
      </div>
    </div>

    <!-- Overlay External -->
    <div id="overlay-external"
      class="overlay fixed inset-0 z-40 w-full h-dvh bg-[var(--secondary-text-color)] overflow-y-scroll hidden">
      <div class="overlay-internal-content w-full h-full flex flex-col justify-center">
        <div class="overlay-content w-full flex-1 bg-[var(--primary-background-color)] flex items-center justify-center relative">
          <img class="w-full h-[565px] max-h-[600px] object-contain" alt="" id="overlay-ext-variant-img">
          <div class="cta-back absolute left-1/2 bottom-6 transform -translate-x-1/2 inline-flex items-center justify-center cursor-pointer"
            id="close-external-overlay">
            {% render 'back-arrow-icon' %}
            <p class="body-14-medium ml-2">Back</p>
          </div>
        </div>
        <div class="overlay-images-scroll flex flex-row items-center justify-start overflow-x-auto space-x-2 p-4 flex-shrink-0 h-auto">
          {% for external_image in external_images %}
          {% assign external_img = external_gallery[external_image] %}
          <div class="container-scroll-image w-[208px] h-[128px] rounded-xl bg-[var(--primary-background-color)] bg-cover bg-center flex-shrink-0">
            <img src="{{ external_img | img_url: 'master' }}" class="w-full h-full object-contain" alt="">
          </div>
          {% endfor %}
        </div>
        <div class="overlay-ctas-container w-full h-auto flex flex-col gap-y-4 p-4">
          <div class="cta-delear">
            <p class="body-14-medium">Locate dealer</p>
            {% render 'cta-icon' %}
          </div>
          <div class="cta-brochure">
            <p class="body-14-medium">Download brochure</p>
            {% render 'download-icon' %}
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Internal gallery section -->
  <div class="container-gallery w-full h-auto flex flex-col items-center justify-start gap-y-2 hidden"
    id="internal-content" data-attribute="internal-gallery">
    <div class="main-img-container w-full h-auto relative">
      {% if internal_gallery %}
      {% assign internal_images = "image_up_one,image_up_two,image_up_three,image_up_four,image_up_five" | split: "," %}
      {% assign first_image = internal_gallery[internal_images[0]] %}
      <img src="{{ first_image | img_url: 'master' }}" class="w-full h-[220px] rounded-lg object-cover object-center"
        alt="Fallback image" id="first-internal-img">
    </div>

    <div class="w-full h-auto">
      <div class="flex flex-row items-center justify-start overflow-x-auto space-x-2 h-auto">
        {% for internal_image in internal_images %}
        {% assign internal_img = internal_gallery[internal_image] %}
        <div class="container-magnetic-scroll w-[165px] h-[128px] flex-shrink-0">
          <img src="{{ internal_img | img_url: 'master' }}"
            class="w-full h-full object-cover rounded-lg gallery-main-scroll-image"
            data-image-src="{{ internal_img | img_url: 'master' }}" alt=""
            data-internal-overlay="overlay-internal-gallery">
        </div>
        {% endfor %}
      </div>
    </div>

    <!-- Overlay Internal -->
    <div id="overlay-internal"
      class="overlay fixed inset-0 z-40 w-full h-dvh bg-[var(--secondary-text-color)] overflow-y-scroll hidden">
      <div class="overlay-internal-content w-full h-full flex flex-col justify-center">
        <div class="overlay-content w-full flex-1 bg-[var(--primary-background-color)] flex items-center justify-center relative">
          <img class="w-full h-[565px] max-h-[600px] object-contain" alt="" id="overlay-int-variant-img">
          <div class="cta-back absolute left-1/2 bottom-6 transform -translate-x-1/2 inline-flex items-center justify-center cursor-pointer"
            id="close-internal-overlay">
            {% render 'back-arrow-icon' %}
            <p class="body-14-medium ml-2">Back</p>
          </div>
        </div>
        <div class="overlay-images-scroll flex flex-row items-center justify-start overflow-x-auto space-x-2 p-4 flex-shrink-0 h-auto">
          {% for internal_image in internal_images %}
          {% assign internal_img = internal_gallery[internal_image] %}
          <div class="container-scroll-image w-[208px] h-[128px] rounded-xl bg-[var(--primary-background-color)] bg-cover bg-center flex-shrink-0">
            <img src="{{ internal_img | img_url: 'master'}}" class="w-full h-full object-contain" alt="">
          </div>
          {% endfor %}
        </div>
        <div class="overlay-ctas-container w-full h-auto flex flex-col gap-y-4 p-4">
          <div class="cta-delear">
            <p class="body-14-medium">Locate dealer</p>
            {% render 'cta-icon' %}
          </div>
          <div class="cta-brochure">
            <p class="body-14-medium">Download brochure</p>
            {% render 'download-icon' %}
          </div>
        </div>
      </div>
    </div>

    {% endif %}
  </div>

  <!-- In-out tab section -->
  <div class="container-tab-in-out fixed left-1/2 bottom-[30px] w-full h-auto flex flex-row items-center justify-center p-4 gap-4 -translate-x-1/2 z-30">
    <button class="btn-internal-gallery bg-black w-[170px] h-[48px] text-white" id="inTabButton">Internal</button>
    <button class="btn-external-gallery bg-white w-[170px] h-[48px] text-black" id="outTabButton">External</button>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const overlayInt = document.getElementById("overlay-internal");
    const overlayExt = document.getElementById("overlay-external");
    const variantOverlayImg = document.getElementById("overlay-int-variant-img");
    const variantOverlayExtImg = document.getElementById("overlay-ext-variant-img");
    const firstInternalImg = document.getElementById("first-internal-img");
    const closeIntOverlayButton = document.getElementById("close-internal-overlay");
    const closeExtOverlayButton = document.getElementById("close-external-overlay");

    function showOverlay(overlay, src, isExternal = false) {
      overlay.classList.remove('hidden');
      overlay.classList.add('flex');
      if (isExternal) {
        variantOverlayExtImg.setAttribute('src', src);  // Use variantOverlayExtImg for external images
      } else {
        variantOverlayImg.setAttribute('src', src);
      }
    }

    function hideOverlay(overlay, isExternal = false) {
      overlay.classList.add('hidden');
      overlay.classList.remove('flex');
      if (isExternal) {
        variantOverlayExtImg.setAttribute('src', ""); // Clear src for external images
      } else {
        variantOverlayImg.setAttribute('src', "");
      }
    }

    firstInternalImg.addEventListener('click', (e) => {
      const firstInternalImgSrc = e.currentTarget.getAttribute('src');
      const isOverlayOpen = overlayInt.classList.contains('flex');
      if (isOverlayOpen) {
        hideOverlay(overlayInt);
      } else {
        showOverlay(overlayInt, firstInternalImgSrc);
      }
    });

    closeIntOverlayButton.addEventListener('click', () => hideOverlay(overlayInt));

    const externalImages = document.querySelectorAll('[data-external-src]');

    externalImages.forEach(img => {
      img.addEventListener('click', (e) => {
        const firstExternalImgSrc = e.currentTarget.getAttribute('data-external-src');
        const isExternalOverlayOpen = overlayExt.classList.contains('flex');
        if (isExternalOverlayOpen) {
          hideOverlay(overlayExt, true); // Pass true for external
        } else {
          showOverlay(overlayExt, firstExternalImgSrc, true); // Pass true for external
        }
      });
    });

    closeExtOverlayButton.addEventListener('click', () => hideOverlay(overlayExt, true));
  });
</script>
