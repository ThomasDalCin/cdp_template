<div class="top-section-gallery w-full h-auto flex flex-col gap-y-2 items-center justify-start p-4 mt-[77px]">
  <!--tab section-->
  <div class="tab-section w-full h-auto flex flex-row items-center justify-start mb-7">
    <div class="tab-content flex-1 h-auto flex items-center justify-center relative p-2 cursor-pointer"
      id="external-tab">
      <p class="body-14">External</p>
      <div
        class="tab-rect absolute left-1/2 bottom-0 -translate-x-1/2 -translate-y-1/2 w-[16px] h-[1px] bg-black transition-transform duration-300 ease-in-out">
      </div>
    </div>
    <div class="tab-content flex-1 h-auto flex items-center justify-center relative p-2 cursor-pointer"
      id="internal-tab">
      <p class="body-14">Internal</p>
      <div
        class="tab-rect absolute left-1/2 bottom-0 -translate-x-1/2 -translate-y-1/2 w-[16px] h-[1px] bg-black hidden transition-transform duration-300 ease-in-out">
      </div>
    </div>
  </div>

  {% assign external_gallery = product.metafields.custom.external_images_boat.value %}
  {% assign internal_gallery = product.metafields.custom.internal_boat_up.value %}
  {% assign internal_gallery_down = product.metafields.custom.internal_boat_down.value %}

  <!--external gallery section-->
  <div class="container-gallery w-full h-auto flex flex-col items-center justify-start gap-y-2 hidden"
    id="external-content" data-attribute="external-gallery">
    <div class="video-container w-full h-auto relative">
      {% if external_gallery %}
      {% assign external_images = "boat_video,boat_image_one,boat_image_two,boat_image_three,boat_image_four" | split:
      "," %}
      {% assign external_video = external_images[0] %}
      {% assign productVideo = external_gallery[external_video] %}

      {% if productVideo %}
      <video id="productVideo" class="video w-full h-[220px] rounded-lg" preload="metadata" muted
        poster="{{ productVideo | img_url: 'master' }}">
        <source src="{{ productVideo | file_url }}" type="video/mp4">
      </video>
      <div id="playButton" class="video-settings absolute inset-0 flex items-center justify-center cursor-pointer">
        <svg class="w-12 h-12 text-white fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
          <path d="M8 5v14l11-7z" />
        </svg>
      </div>
      {% else %}
      {% assign first_image = external_gallery[external_images[1]] %}
      <img src="{{ first_image | img_url: 'master' }}" class="w-full h-[220px] rounded-lg object-cover"
        alt="Fallback image">
      {% endif %}
      {% endif %}
    </div>

    <div class="w-full max-h-[220px] h-auto">
      <div class="flex flex-row items-center justify-start overflow-x-auto space-x-2 h-auto">
        {% for external_image in external_images %}
        {% assign external_img = external_gallery[external_image] %}
        <div class="container-magnetic-scroll w-[165px] h-[128px] flex-shrink-0">
          <img src="{{ external_img | img_url: 'master' }}" class="w-full h-full object-cover rounded-lg" alt=""
            data-external-src="{{ external_img | img_url: 'master' }}">
        </div>
        {% endfor %}
      </div>
    </div>
  </div>

  <!--internal gallery section-->
  <div class="container-gallery w-full h-auto flex flex-col items-center justify-start gap-y-2 hidden"
    id="internal-content" data-attribute="internal-gallery">
    <div class="main-img-container w-full h-auto relative">
      {% if internal_gallery %}
      {% assign internal_images = "image_up_one,image_up_two,image_up_three,image_up_four,image_up_five" | split: "," %}
      {% assign first_image = internal_gallery[internal_images[0]] %}
      <img src="{{ first_image | img_url: 'master' }}" class="w-full h-[220px] rounded-lg object-cover object-center"
        alt="Fallback image" id="first-internal-img">
      {% endif %}
    </div>

    <div class="w-full h-auto">
      <div class="flex flex-row items-center justify-start overflow-x-auto space-x-2 h-auto">
        {% for internal_image in internal_images %}
        {% assign internal_img = internal_gallery[internal_image] %}
        <div class="container-magnetic-scroll w-[165px] h-[128px] flex-shrink-0">
          <img src="{{ internal_img | img_url: 'master' }}"
            class="w-full h-full object-cover rounded-lg gallery-main-scroll-image"
            data-image-src="{{ internal_img | img_url: 'master' }}" alt=""
            data-internal-overlay="overlay-internal-gallery">
        </div>
        {% endfor %}
      </div>
    </div>
  </div>

  <!--internal gallery down section-->
  <div class="container-gallery w-full h-auto flex flex-col items-center justify-start gap-y-2 hidden"
    id="internal-down-content" data-attribute="internal-down-gallery">
    <div class="main-img-container w-full h-auto relative">
      {% if internal_gallery_down %}
      {% assign internal_down_images = "image_down_one,image_down_two,image_down_three,image_down_four,image_down_five"
      | split: "," %}
      {% assign first_image = internal_gallery_down[internal_down_images[0]] %}
      <img src="{{ first_image | img_url: 'master' }}" class="w-full h-[220px] rounded-lg object-cover object-center"
        alt="Fallback image" id="first-internal-img">
      {% endif %}
    </div>

    <div class="w-full h-auto">
      <div class="flex flex-row items-center justify-start overflow-x-auto space-x-2 h-auto">
        {% for internal_down_image in internal_down_images %}
        {% assign internal_down_img = internal_gallery_down[internal_down_image] %}
        <div class="container-magnetic-scroll w-[165px] h-[128px] flex-shrink-0">
          <img src="{{ internal_down_img | img_url: 'master' }}"
            class="w-full h-full object-cover rounded-lg gallery-main-scroll-image"
            data-image-src="{{ internal_down_img | img_url: 'master' }}" alt=""
            data-internal-overlay="overlay-internal-down-gallery">
        </div>
        {% endfor %}
      </div>
    </div>
  </div>

  <!--overlay swiper gallery-->
  <div class="overlay-wrapper absolute z-40 inset-0 h-dvh bg-white hidden">
    <div class="overlay-wrapper-content w-full h-full p-4 flex flex-col gap-y-6">
      <div class="overlay-swiper-container w-full flex-1">
        <div class="swiper mySwiper w-full h-full">
          <div class="swiper-wrapper">
            <!--render dynamically swiper slides here -->
          </div>
          <div class="swiper-pagination mb-4 flex items-center justify-center"></div>
        </div>
      </div>
      <div class="overlay-cta-container w-full h-auto flex flex-col items-center justify-start gap-y-3 mt-5">
        <div class="cta-delear">
          <p class="body-14-medium">Locate dealer</p>
          {% render 'cta-icon' %}
        </div>
        <div class="cta-brochure">
          <p class="body-14-medium">Download brochure</p>
          {% render 'download-icon' %}
        </div>
      </div>
    </div>
  </div>

  <!--in-out tab section-->
  <div class="tab-section w-full h-auto flex flex-row items-center justify-start mt-7 mb-7" id="tab-in-out">
    <div class="tab-content flex-1 h-auto flex items-center justify-center relative p-2 cursor-pointer"
      id="inboard-tab">
      <p class="body-14">Inboard</p>
      <div
        class="tab-in-rect absolute left-1/2 bottom-0 -translate-x-1/2 -translate-y-1/2 w-[16px] h-[1px] bg-black transition-transform duration-300 ease-in-out">
      </div>
    </div>
    <div class="tab-content flex-1 h-auto flex items-center justify-center relative p-2 cursor-pointer"
      id="outboard-tab">
      <p class="body-14">Outboard</p>
      <div
        class="tab-out-rect absolute left-1/2 bottom-0 -translate-x-1/2 -translate-y-1/2 w-[16px] h-[1px] bg-black hidden transition-transform duration-300 ease-in-out">
      </div>
    </div>
  </div>

  <!--galley tab section-->
  <div class="tab-section w-full h-auto flex flex-row items-center justify-start mt-7 mb-7 hidden" id="galley-settings">
    <div class="tab-content flex-1 h-auto flex items-center justify-center relative p-2 cursor-pointer"
      id="internal-up-tab">
      <p class="body-14">Galley-Up</p>
      <div
        class="tab-internal-up-rect absolute left-1/2 bottom-0 -translate-x-1/2 -translate-y-1/2 w-[16px] h-[1px] bg-black transition-transform duration-300 ease-in-out">
      </div>
    </div>
    <div class="tab-content flex-1 h-auto flex items-center justify-center relative p-2 cursor-pointer"
      id="internal-down-tab">
      <p class="body-14">Galley-Down</p>
      <div
        class="tab-internal-down-rect absolute left-1/2 bottom-0 -translate-x-1/2 -translate-y-1/2 w-[16px] h-[1px] bg-black hidden transition-transform duration-300 ease-in-out">
      </div>
    </div>
  </div>
</div>



<style>
  .swiper-pagination-bullet.swiper-pagination-bullet-active {
    background-color: var(--secondary-text-color) !important;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
  // Video control setup
  const video = document.getElementById('productVideo');
  const playButton = document.getElementById('playButton');

  if (video && playButton) {
    playButton.style.display = 'flex';

    playButton.addEventListener('click', function () {
      if (video.paused) {
        video.play();
        playButton.style.display = 'none';
      } else {
        video.pause();
        playButton.style.display = 'flex';
      }
    });

    video.addEventListener('click', function () {
      if (video.paused) {
        video.play();
        playButton.style.display = 'none';
      } else {
        video.pause();
        playButton.style.display = 'flex';
      }
    });

    video.addEventListener('play', function () {
      playButton.style.display = 'none';
    });

    video.addEventListener('pause', function () {
      playButton.style.display = 'flex';
    });

    video.addEventListener('ended', function () {
      playButton.style.display = 'flex';
    });
  }

  // Gestione delle tab
  const externalTab = document.getElementById('external-tab');
  const internalTab = document.getElementById('internal-tab');
  const internalDownTab = document.getElementById('internal-down-tab');
  const internalUpTab = document.getElementById('internal-up-tab');
  const externalContent = document.getElementById('external-content');
  const internalContent = document.getElementById('internal-content');
  const internalDownContent = document.getElementById('internal-down-content');
  const internalUpContent = document.getElementById('internal-up-content');
  const externalRect = externalTab.querySelector('.tab-rect');
  const internalRect = internalTab.querySelector('.tab-rect');
  const internalDownRect = internalDownTab.querySelector('.tab-internal-down-rect');
  const internalUpRect = internalUpTab.querySelector('.tab-internal-up-rect');
  const galleySettings = document.getElementById('galley-settings');
  const tabInOut = document.getElementById('tab-in-out');

  // Imposta la visibilità iniziale
  externalContent.classList.remove('hidden');
  internalContent.classList.add('hidden');
  internalDownContent.classList.add('hidden');
  internalUpContent.classList.add('hidden');
  externalRect.classList.remove('hidden');
  internalRect.classList.add('hidden');
  internalDownRect.classList.add('hidden');
  internalUpRect.classList.add('hidden');
  galleySettings.classList.add('hidden');
  tabInOut.classList.add('hidden');

  function showTab(tab, content, rect) {
    // Nascondi tutti i contenuti e rettangoli
    externalContent.classList.add('hidden');
    internalContent.classList.add('hidden');
    internalDownContent.classList.add('hidden');
    internalUpContent.classList.add('hidden');
    externalRect.classList.add('hidden');
    internalRect.classList.add('hidden');
    internalDownRect.classList.add('hidden');
    internalUpRect.classList.add('hidden');

    // Mostra il contenuto e il rettangolo selezionato
    content.classList.remove('hidden');
    rect.classList.remove('hidden');

    // Logica aggiuntiva per specifiche aree di contenuto
    if (content === internalContent) {
      galleySettings.classList.remove('hidden');
      galleySettings.classList.add('flex');
      tabInOut.classList.add('hidden');
    } else if (content === externalContent) {
      tabInOut.classList.add('flex');
      tabInOut.classList.remove('hidden');
      galleySettings.classList.add('hidden');
    }
  }

  function showInternalSubTab(tab) {
    internalDownContent.classList.add('hidden');
    internalUpContent.classList.add('hidden');

    if (tab === internalDownTab) {
      internalDownContent.classList.remove('hidden');
      internalDownRect.classList.remove('hidden');
    } else if (tab === internalUpTab) {
      internalUpContent.classList.remove('hidden');
      internalUpRect.classList.remove('hidden');
    }
  }

  function setupImageListeners() {
    // Rimuovi gli event listener da tutti i contenitori
    document.querySelectorAll('.container-gallery').forEach(container => {
      container.removeEventListener('click', updateMainImage);
    });

    // Aggiungi event listener solo al contenitore visibile
    const activeContainer = document.querySelector('.container-gallery:not(.hidden)');
    if (activeContainer) {
      activeContainer.addEventListener('click', updateMainImage);
    }
  }

  function updateMainImage(event) {
    const clickedImage = event.target;
    if (clickedImage && clickedImage.classList.contains('gallery-main-scroll-image')) {
      const newImageSrc = clickedImage.getAttribute('data-image-src');
      if (newImageSrc) {
        const mainImgContainer = document.querySelector('.main-img-container img');
        if (mainImgContainer) {
          mainImgContainer.src = newImageSrc;
        }
      }
    }
  }

  function handleExternalImageClick(e) {
  const currentSrc = e.currentTarget.getAttribute('data-external-src');

  // Verifica se currentSrc è definito e non è vuoto
  if (!currentSrc || currentSrc.trim() === '') {
    console.error('L\'immagine non ha una sorgente definita.');
    return;
  }

  const videoContainer = document.querySelector('.video');
  const videoSettings = document.querySelector('.video-settings');
  const parentVideo = document.querySelector('.video-container');
  const mainImg = document.querySelector('#first-external-img');

  if (e.currentTarget === document.querySelector(".container-magnetic-scroll img")) {
    if (!document.body.contains(videoContainer)) {
      parentVideo.innerHTML = '';
      parentVideo.appendChild(videoContainer);
      parentVideo.appendChild(videoSettings);
    }
  } else {
    if (document.body.contains(videoContainer)) {
      videoContainer.remove();
      videoSettings.remove();
    }
    if (mainImg) {
      mainImg.src = currentSrc;
      mainImg.id = 'first-external-img';
      parentVideo.appendChild(mainImg);
    } else {
      // Crea l'immagine se non esiste
      const newMainImg = document.createElement('img');
      newMainImg.src = currentSrc;
      newMainImg.id = 'first-external-img';
      newMainImg.classList.add('w-full', 'h-[220px]', 'rounded-lg', 'object-cover', 'object-center');
      parentVideo.appendChild(newMainImg);
    }
  }
}


  // Imposta gli eventi di click sulle tab principali
  externalTab.addEventListener('click', function () {
    showTab(externalTab, externalContent, externalRect);
  });

  internalTab.addEventListener('click', function () {
    showTab(internalTab, internalContent, internalRect);
    showInternalSubTab(internalDownTab); // Imposta la visibilità di default su 'Galley-Down'
  });

  internalDownTab.addEventListener('click', function () {
    showInternalSubTab(internalDownTab);
  });

  internalUpTab.addEventListener('click', function () {
    showInternalSubTab(internalUpTab);
  });

  // Aggiungi gli eventi di click per le immagini scrollabili
  document.querySelectorAll('.container-magnetic-scroll img').forEach(img => {
    img.addEventListener('click', handleExternalImageClick);
  });

  // Gestione dell'overlay Swiper
  const firstInternalImg = document.getElementById('first-internal-img');
  const firstExternalImg = document.getElementById('first-external-img');

  if (firstExternalImg) {
    firstExternalImg.addEventListener('click', (e) => {
      const clickedImg = e.currentTarget;
      const overlayWrapper = document.querySelector('.overlay-wrapper');
      if (overlayWrapper.classList.contains('hidden')) {
        overlayWrapper.classList.add('block');
        overlayWrapper.classList.remove('hidden');
      }
      getAllImagesByClick(clickedImg);
    });
  }

  if (firstInternalImg) {
    firstInternalImg.addEventListener('click', (e) => {
      const clickedImg = e.currentTarget;
      const overlayWrapper = document.querySelector('.overlay-wrapper');
      if (overlayWrapper.classList.contains('hidden')) {
        overlayWrapper.classList.add('block');
        overlayWrapper.classList.remove('hidden');
        document.body.classList.add('no-scroll');
      }
      getAllImagesByClick(clickedImg);
    });
  }

  function createSwiperEl(slideImages) {
    const sliderWrapper = document.querySelector('.swiper-wrapper');
    slideImages.forEach((slide) => {
      const slideContent = document.createElement('div');
      slideContent.setAttribute('class', 'swiper-slide');
      const slideImg = document.createElement('img');
      slideImg.setAttribute('src', slide);
      slideImg.classList.add('swiper-img', 'w-full', 'h-full', 'object-cover', 'object-center');
      slideContent.appendChild(slideImg);
      sliderWrapper.appendChild(slideContent);
    });
  }

  function getAllImagesByClick(img) {
    const clickedImgSrc = img.src;
    const parentNodeClickedImg = img.closest('.container-gallery');
    const allGalleryImages = parentNodeClickedImg.querySelectorAll('.gallery-main-scroll-image');
    const allGalleryImagesPaths = [clickedImgSrc];
    allGalleryImages.forEach((image) => {
      const imagePath = image.getAttribute('data-image-src');
      allGalleryImagesPaths.push(imagePath);
    });
    createSwiperEl(allGalleryImagesPaths);
  }

  // Configurazione dello swiper
  new Swiper(".mySwiper", {
    effect: 'fade',
    fadeEffect: {
      crossFade: true
    },
    pagination: {
      el: ".swiper-pagination",
      clickable: true
    },
    loop: true
  });
});

</script>