<!-- Overlay Swiper Container -->
<div class="overlay hidden fixed z-50 inset-0 w-full h-dvh bg-[#EFEEED]">

    <!--container-closing-icon-->
    <div
        class="w-auto h-auto bg-white rounded-full flex items-center justify-center p-3 absolute right-4 top-16 close-overlay z-50 cursor-pointer">
        {% render 'x-icon' %}
    </div>

    <!--Swiper wrapper-->
    <div class="swiper swiper-container-overlay">


        <div class="swiper-wrapper swiper-wrapper-overlay">
            <!-- swiper slide here -->
        </div>


        <!--  Swiper bullets pagination -->
        <div
            class="container-swiper-pagination w-full h-auto absolute left-0 right-0 bottom-6 z-10 flex items-start justify-center lg:left-6 lg:top-[150px] lg:flex lg:flex-col lg:gap-y-6 lg:items-center lg:justify-center">
            <div class="w-auto h-auto">
                <div class="swiper-pagination-overlay"></div>
            </div>
        </div>
    </div>


</div>


<!-- Top View Galley Section -->
<div
    class="top-view-horizontal-scroll w-full h-auto px-6 flex flex-col mb-[40px] lg:overflow-x-hidden bg-[#A9A09E] lg:px-10">

    <!-- Main Title Content -->
    <div class="top-view-horizontal-scroll-heading w-full h-auto flex items-center justify-start pt-14 pb-6 lg:hidden">
        <h2 class="header-2">{{ section.settings.main_title | default: "Top view" }}</h2>
    </div>

    <!-- Horizontal Container Scrolling -->
    <div
        class="horizontal-magnetic-scroll-container w-[calc(100%_+_2rem)] px-4 py-14 -mx-4 h-auto flex flex-row items-center justify-start gap-x-3 overflow-x-auto flex-shrink-0 lg:w-[calc(100%_+_5rem)] lg:px-10 lg:-mx-10">

        <!-- Metafield Assignment for Galley Up and Galley Down -->
        {% assign topViewGalleyUp = product.metafields.custom.top_view_galley_up.value %}
        {% assign topViewGalleyDown = product.metafields.custom.top_view_galley_down.value %}
        {% assign interiorViewGalleyUp = product.metafields.custom.interior_view_galley_up.value %}
        {% assign interiorViewGalleyDown = product.metafields.custom.interior_view_galley_down.value %}

        <!-- Galley Up Section -->
        {% if topViewGalleyUp %}
        {% assign topViewGalleyUp_images = 'image_one,image_two,image_three,image_four' | split: ',' %}

        <!-- Loop Through Galley Up Images and Render Only the First Image -->
        {% for image_key in topViewGalleyUp_images %}
        {% assign image_item = topViewGalleyUp[image_key] %}
        {% if image_item %}
        {% if forloop.first %}
        <div
            class="top-view-scroll-img-container w-auto h-auto flex flex-col gap-y-2 items-start justify-center lg:h-[942px] lg:flex-1">
            <div class="top-view-scroll-img rounded-xl w-[186px] h-[439px] bg-[#F2EDED] bg-cover bg-center flex-shrink-0 lg:flex-1 lg:w-full lg:bg-no-repeat lg:bg-55%"
                style="background-image: url('{{ image_item | img_url: 'master' }}');" data-overlay="overlay-galley-up"
                data-image="{{ image_item | img_url: 'master' }}">
            </div>
            <div class="flex items-center justify-center w-full h-auto">
                <p class="body-16">Top View | Galley-up</p>
            </div>
        </div>
        {% endif %}
        {% endif %}
        {% endfor %}

        <!-- Hidden Images for Galley Up -->
        <div class="hidden-images-container" style="display: none;" data-overlay="overlay-galley-up">
            {% for image_key in topViewGalleyUp_images %}
            {% assign image_item = topViewGalleyUp[image_key] %}
            {% if image_item %}
            <div class="hidden-image" data-image="{{ image_item | img_url: 'master' }}"></div>
            {% endif %}
            {% endfor %}
        </div>
        {% endif %}

        <!-- Galley Down Section -->
        {% if topViewGalleyDown %}
        {% assign topViewGalleyDown_images = 'image_one,image_two,image_three,image_four' | split: ',' %}

        <!-- Loop Through Galley Down Images and Render Only the First Image -->
        {% for image_key in topViewGalleyDown_images %}
        {% assign image_item = topViewGalleyDown[image_key] %}
        {% if image_item %}
        {% if forloop.first %}
        <div
            class="top-view-scroll-img-container w-auto h-auto flex flex-col gap-y-2 items-start justify-center lg:h-[942px] lg:flex-1">
            <div class="top-view-scroll-img rounded-xl w-[186px] h-[439px] bg-[#F2EDED] bg-cover bg-center flex-shrink-0 lg:flex-1 lg:w-full lg:bg-no-repeat lg:bg-55%"
                style="background-image: url('{{ image_item | img_url: 'master' }}');"
                data-overlay="overlay-galley-down">
            </div>
            <div class="flex items-center justify-center w-full h-auto">
                <p class="body-16">Top View | Galley-down</p>
            </div>
        </div>
        {% endif %}
        {% endif %}
        {% endfor %}

        <!-- Hidden Images for Galley Down -->
        <div class="hidden-images-container" style="display: none;" data-overlay="overlay-galley-down">
            {% for image_key in topViewGalleyDown_images %}
            {% assign image_item = topViewGalleyDown[image_key] %}
            {% if image_item %}
            <div class="hidden-image" data-image="{{ image_item | img_url: 'master' }}"></div>
            {% endif %}
            {% endfor %}
        </div>
        {% endif %}

        <!-- Interior Galley Up Section -->
        {% if interiorViewGalleyUp %}
        {% assign interiorViewGalleyUp_images = 'image_one,image_two,image_three,image_four' | split: ',' %}

        <!-- Loop Through Interior Galley Up Images and Render Only the First Image -->
        {% for image_key in interiorViewGalleyUp_images %}
        {% assign image_item = interiorViewGalleyUp[image_key] %}
        {% if image_item %}
        {% if forloop.first %}
        <div
            class="top-view-scroll-img-container w-auto h-auto flex flex-col gap-y-2 items-start justify-center lg:h-[942px] lg:flex-1">
            <div class="top-view-scroll-img rounded-xl w-[186px] h-[439px] bg-[#F2EDED] bg-cover bg-center flex-shrink-0 lg:flex-1 lg:w-full lg:bg-no-repeat lg:bg-55%"
                style="background-image: url('{{ image_item | img_url: 'master' }}');"
                data-overlay="overlay-interior-galley-up">
            </div>
            <div class="flex items-center justify-center w-full h-auto" data-overlay="overlay-interior-galley-up">
                <p class="body-16">Interior View | Galley-up</p>
            </div>
        </div>
        {% endif %}
        {% endif %}
        {% endfor %}

        <!-- Hidden Images for Interior Galley Up -->
        <div class="hidden-images-container" style="display: none;">
            {% for image_key in interiorViewGalleyUp_images %}
            {% assign image_item = interiorViewGalleyUp[image_key] %}
            {% if image_item %}
            <div class="hidden-image" data-image="{{ image_item | img_url: 'master' }}"></div>
            {% endif %}
            {% endfor %}
        </div>
        {% endif %}

        <!-- Interior Galley Down Section -->
        {% if interiorViewGalleyDown %}
        {% assign interiorViewGalleyDown_images = 'image_one,image_two,image_three,image_four' | split: ',' %}

        <!-- Loop Through Interior Galley Down Images and Render Only the First Image -->
        {% for image_key in interiorViewGalleyDown_images %}
        {% assign image_item = interiorViewGalleyDown[image_key] %}
        {% if image_item %}
        {% if forloop.first %}
        <div
            class="top-view-scroll-img-container w-auto h-auto flex flex-col gap-y-2 items-start justify-center lg:h-[942px] lg:flex-1">
            <div class="top-view-scroll-img rounded-xl w-[186px] h-[439px] bg-[#F2EDED] bg-cover bg-center flex-shrink-0 lg:flex-1 lg:w-full lg:bg-no-repeat lg:bg-55%"
                style="background-image: url('{{ image_item | img_url: 'master' }}');"
                data-overlay="overlay-interior-galley-down">
            </div>
            <div class="flex items-center justify-center w-full h-auto">
                <p class="body-16">Interior View | Galley-down</p>
            </div>
        </div>
        {% endif %}
        {% endif %}
        {% endfor %}

        <!-- Hidden Images for Interior Galley Down -->
        <div class="hidden-images-container" style="display: none;" data-overlay="overlay-interior-galley-down">
            {% for image_key in interiorViewGalleyDown_images %}
            {% assign image_item = interiorViewGalleyDown[image_key] %}
            {% if image_item %}
            <div class="hidden-image" data-image="{{ image_item | img_url: 'master' }}"></div>
            {% endif %}
            {% endfor %}
        </div>
        {% endif %}

    </div>
</div>


<script>
   document.addEventListener('DOMContentLoaded', function () {
    const overlay = document.querySelector('.overlay');

    // Funzione per mostrare l'overlay e inizializzare il Swiper
    function openOverlay(images) {
        const swiperWrapper = document.querySelector('.swiper-wrapper-overlay');

        // Svuotiamo il contenitore delle slide prima di aggiungere nuove immagini
        swiperWrapper.innerHTML = '';

        // Definiamo le classi da aggiungere alla slide
        const slideClasses = ["h-screen", "flex", "items-center", "justify-center"];

        // Aggiungiamo le immagini al swiper
        images.forEach(imageUrl => {
            const slide = document.createElement('div');
            slide.classList.add('swiper-slide');
            slideClasses.forEach(cls => {
                slide.classList.add(cls); // Aggiunge tutte le classi necessarie
            });

            const slideImg = document.createElement('img');
            slideImg.classList.add('w-[247px]', 'h-[598px]'); // Aggiungi direttamente le classi per le dimensioni
            slideImg.setAttribute('src', imageUrl); // Imposta l'attributo src dell'immagine
            slide.appendChild(slideImg);
            swiperWrapper.appendChild(slide);
        });

        // Inizializzare il swiper dopo aver aggiunto le slide
        var swiperOverlay = new Swiper('.swiper-container-overlay', {
            effect: 'fade',
            fadeEffect: {
                crossFade: true
            },
            pagination: {
                el: '.swiper-pagination-overlay',
                clickable: true
            },
        });

        // Mostra l'overlay
        overlay.classList.remove('hidden');
        document.body.classList.add('no-scroll');
    }

    // Gestisci il click su una delle immagini
    const imageContainers = document.querySelectorAll('.top-view-scroll-img');

    imageContainers.forEach(container => {
        container.addEventListener('click', function () {
            // Recupera tutte le immagini correlate
            const overlayType = container.getAttribute('data-overlay');
            let images = [];

            // Seleziona tutte le immagini nascoste relative all'overlay cliccato
            const hiddenImages = document.querySelectorAll(`.hidden-images-container[data-overlay="${overlayType}"] .hidden-image`);

            // Aggiungi le immagini nascoste
            hiddenImages.forEach(hiddenImage => {
                images.push(hiddenImage.getAttribute('data-image'));
            });

            // Apri l'overlay con le immagini
            openOverlay(images);
        });
    });

    // Gestisci il click sul bottone di chiusura dell'overlay
    const closeButton = document.querySelector('.close-overlay');
    if (closeButton) {
        closeButton.addEventListener('click', function () {
            overlay.classList.add('hidden');
            document.body.classList.remove('no-scroll'); // Rimuove il blocco dello scroll
        });
    }
});

</script>