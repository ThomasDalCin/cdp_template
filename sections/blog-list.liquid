<!-- article with news, press room & awards tag -->
<div class="blog-news-container w-full h-auto flex flex-col overflow-x-hidden">
  <div id="news-layout" class="blogs-list-container w-full h-auto flex flex-col gap-y-10">
    {% if blogs.news %}
    {% assign newsArticles = blogs.news.articles %}
    {% assign totalArticles = newsArticles.size %}

    {% if totalArticles > 0 %}

    <!-- Firt article on first row -->
    <div class="blog-list-row width-view p-4 lg:mb-10 lg:px-10">
      <div class="blog-item-width-view w-full h-auto flex flex-col gap-y-4 items-start justify-center lg:relative"
        data-tags="{{ newsArticles[0].tags | join: ',' }}">
        <div class="blog-item-image w-full h-auto">
          <img src="{{ newsArticles[0].image | img_url: 'master' }}"
            class="w-full h-auto min-h-[200px] max-h-[200px] object-cover rounded-xl lg:h-[480px] lg:max-h-[480px]"
            alt="{{ newsArticles[0].image.alt }}">
        </div>
        <div
          class="blog-item-details w-full h-auto flex flex-col items-start justify-center gap-y-4 lg:absolute lg:justify-start lg:right-[16px] lg:top-[16px] lg:w-[calc(100%-32px)] lg:h-[calc(100%-32px)] lg:max-w-[297px] lg:z-10 lg:bg-white lg:rounded-lg lg:p-4">
          <div class="blog-item-details-container w-full h-full relative flex flex-col gap-y-4">
            <div class="blog-item-date w-full h-auto flex flex-row justify-between">
              <p class="body-12">{{ newsArticles[0].published_at | date: '%B %d, %Y' }}</p>
            </div>
            <div class="blog-item-info w-full h-auto flex flex-col items-start justify-center gap-y-2">
              <h3 class="body-14-medium">{{ newsArticles[0].title | capitalize }}</h3>
              <p class="body-12">{{ newsArticles[0].content | truncate: 300 }}</p>
            </div>
            <div class="blog-item-cta w-full h-auto flex items-center justify-start lg:absolute lg:bottom-0">
              <div class="cta-blog outline-none lg:w-full">
                <a href="{{ newsArticles[0].url }}">
                  <p class="body-14-medium">{{ section.settings.article_cta }}</p>
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    {% endif %}

    {% if totalArticles > 1 %}
    <!-- Check missing articles -->
    {% assign remainingArticles = totalArticles | minus: 1 %}
    {% assign halfSize = remainingArticles | divided_by: 2 %}

    <!--first half missing articles on second row -->
    <div class="blog-list-row horizontal-view">
      <!-- Arrows Box -->
      <div class="w-full h-auto hidden px-4 lg:px-10 lg:flex lg:justify-end lg:gap-x-6" id="third-row-arrows">
        <button id="prevArrowSecond"
          class="carousel-arrow left-arrow flex items-center justify-center w-10 h-10 rounded-full border border-black text-white">
          {% render 'arrow-left-icon' %}
        </button>
        <button id="nextArrowSecond"
          class="carousel-arrow right-arrow flex items-center justify-center w-10 h-10 rounded-full border border-black text-white">
          {% render 'arrow-right-icon' %}
        </button>
      </div>
    </div>

    <div
      class="blog-item-horizontal-scroll w-[calc(100%+2rem)] p-4 h-auto overflow-x-auto flex flex-row gap-x-2 lg:w-[calc(100%+5rem)] lg:gap-x-4 lg:px-10"
      id="second-row">
      {% for i in (1..halfSize) %}
      <div
        class="blog-item-horizontal-view w-[200px] min-h-[386px] flex flex-col items-start justify-start shadow-custom rounded-xl lg:w-[400px] last-of-type:pr-8 lg:last-of-type:pr-20 flex-shrink-0"
        data-tags="{{ newsArticles[i].tags | join: ',' }}">
        <div class="blog-item-image w-full h-auto">
          <img src="{{ newsArticles[i].image | img_url: 'master' }}"
            class="w-full h-auto min-h-[160px] max-h-[160px] object-cover rounded-tl-xl rounded-tr-xl"
            alt="{{ newsArticles[i].image.alt }}">
        </div>
        <div
          class="blog-item-info-container w-full h-auto p-2 flex flex-col gap-y-1 lg:flex-col-reverse lg:gap-y-10 lg:p-6">
          <div class="blog-item-info w-full h-auto flex flex-col items-start justify-center gap-y-1">
            <h3 class="body-14-medium">{{ newsArticles[i].title | capitalize }}</h3>
            <p class="body-12">{{ newsArticles[i].content | truncate: 100 }}</p>
          </div>
        </div>
        <div
          class="blog-item-date w-full h-auto flex flex-row justify-between absolute left-2 bottom-4 lg:left-6 lg:bottom-6">
          <p class="body-12">{{ newsArticles[i].published_at | date: '%B %d, %Y' }}</p>
        </div>
      </div>
      {% endfor %}
    </div>


    <!-- second half missing articles on third row -->
    <div class="blog-list-row horizontal-view">
      <!-- Arrows Box -->
      <div class="w-full h-auto hidden px-4 lg:px-10 lg:flex lg:justify-end lg:gap-x-6" id="third-row-arrows">
        <button id="prevArrowThird"
          class="carousel-arrow left-arrow flex items-center justify-center w-10 h-10 rounded-full border border-black text-white">
          {% render 'arrow-left-icon' %}
        </button>
        <button id="nextArrowThird"
          class="carousel-arrow right-arrow flex items-center justify-center w-10 h-10 rounded-full border border-black text-white">
          {% render 'arrow-right-icon' %}
        </button>
      </div>
    </div>
    <div
    class="blog-item-horizontal-scroll w-[calc(100%+2rem)] px-4 h-auto overflow-x-auto flex flex-row gap-x-2 lg:w-[calc(100%+5rem)] lg:gap-x-4 lg:px-10"
    id="third-row">
    {% assign startIndex = halfSize | plus: 1 %}
    {% for i in (startIndex..remainingArticles) %}
    <div
      class="blog-item-horizontal-view min-w-[250px] h-auto flex flex-col gap-y-4 items-start justify-start rounded-lg lg:min-w-[812px] last-of-type:pr-8 lg:last-of-type:pr-20 flex-shrink-0"
      data-tags="{{ newsArticles[i].tags | join: ',' }}">
      <div class="blog-item-image w-full h-auto">
        <img src="{{ newsArticles[i].image | img_url: 'master' }}"
          class="w-full h-auto min-h-[250px] max-h-[250px] object-cover rounded-lg lg:min-h-[398px]"
          alt="{{ newsArticles[i].image.alt }}">
      </div>
      <div class="blog-item-date w-full h-auto flex flex-row justify-between">
        <p class="body-12">{{ newsArticles[i].published_at | date: '%B %d, %Y' }}</p>
      </div>
      <div class="blog-item-info w-full h-auto flex flex-col items-start justify-center gap-y-2">
        <h3 class="body-14-medium">{{ newsArticles[i].title | capitalize }}</h3>
      </div>
      <div class="blog-item-cta w-full h-auto flex items-center justify-start">
        <div class="cta-blog outline-none">
          <a href="{{ newsArticles[i].url }}">
            <p class="body-14-medium">{{ section.settings.article_cta }}</p>
          </a>
        </div>
      </div>
    </div>
    {% endfor %}
  </div>
  

  </div>
  {% endif %}
  {% endif %}
</div>



<!-- Layout for Press Room (Hidden by default) -->
<div id="pressroom-layout" class="blogs-list-container press-room hidden w-full h-auto flex flex-col gap-y-3">
  <!-- Press Room articles loop -->
  {% for article in blogs.news.articles %}
  {% if article.tags contains 'Press room' %}
  <div class="blog-item-press-room w-full h-auto flex flex-col gap-y-4 p-4 lg:relative lg:overflow-hidden">
    <div class="blog-item-image w-full h-auto flex flex-col gap-y-4 relative lg:overflow-hidden">
      <img src="{{ article.image | img_url: 'master' }}"
        class="w-full h-auto min-h-[200px] max-h-[200px] object-cover rounded-xl lg:h-[480px] lg:max-h-[480px]"
        alt="{{ article.image.alt }}">
      <div
        class="blog-item-details flex flex-col gap-y-4 lg:absolute lg:top-[16px] lg:right-[16px] lg:w-[calc(100%-32px)] lg:h-[calc(100%-32px)] lg:max-w-[297px] lg:bg-white lg:rounded-lg lg:p-4 lg:shadow-lg">
        <div class="blog-item-date w-full h-auto flex flex-row justify-between">
          <p class="body-12">{{ article.published_at | date: '%B %d, %Y' }}</p>
        </div>
        <div class="blog-item-info w-full h-auto flex flex-col items-start justify-center gap-y-2">
          <h3 class="body-14-medium">{{ article.title | capitalize }}</h3>
          <p class="body-12">{{ article.content | truncate: 100 }}</p>
        </div>
        <div class="blog-item-cta w-full h-auto flex items-center justify-start">
          <div class="cta-download outline-none flex items-center gap-x-2">
            <a href="{{ article.url }}">
              <p class="body-14-medium">{{ section.settings.download_article_cta }}</p>
            </a>
            {% render 'download-icon' %}
          </div>
        </div>
      </div>
    </div>
  </div>
  {% endif %}
  {% endfor %}
</div>

<!-- Layout for Awards (Hidden by default) -->
<div id="awards-layout" class="blogs-list-container awards hidden w-full h-auto flex flex-col gap-y-3">
  {% for article in blogs.news.articles %}
  {% if article.tags contains 'Awards' %}
  <a href="{{ article.url }}">
    <div class="blog-item-awards w-full h-auto flex flex-col gap-y-4 p-4">
      <div class="blog-item-image w-full h-auto">
        <img src="{{ article.image | img_url: 'master' }}"
          class="w-full h-auto min-h-[200px] max-h-[200px] object-cover rounded-xl lg:h-[480px] lg:max-h-[480px]"
          alt="{{ article.image.alt }}">
      </div>
      <div class="blog-item-date w-full h-auto flex flex-row justify-between">
        <p class="body-12">{{ article.published_at | date: '%B %d, %Y' }}</p>
      </div>
      <div class="blog-item-info w-full h-auto flex flex-col items-start justify-center gap-y-2">
        <h3 class="body-14-medium">{{ article.title | capitalize }}</h3>
        <p class="body-12">{{ article.content | truncate: 100 }}</p>
      </div>
    </div>
  </a>
  {% endif %}
  {% endfor %}
</div>
</div>

<style>
  .carousel-arrow.disabled {
    opacity: 0.5;
    pointer-events: none;
  }

  .carousel-arrow:not(.disabled) {
    opacity: 1;
    pointer-events: auto;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const chips = document.querySelectorAll('.chips-label');
    const newsLayout = document.getElementById('news-layout');
    const pressRoomLayout = document.getElementById('pressroom-layout');
    const awardsLayout = document.getElementById('awards-layout');

    let activeChip = null;
    chips.forEach(chip => {
      chip.addEventListener('click', function () {
        const tag = chip.getAttribute('data-tag');
        newsLayout.classList.add('hidden');
        pressRoomLayout.classList.add('hidden');
        awardsLayout.classList.add('hidden');

        if (tag === 'News') {
          newsLayout.classList.remove('hidden');
        } else if (tag === 'Press room') {
          pressRoomLayout.classList.remove('hidden');
        } else if (tag === 'Awards') {
          awardsLayout.classList.remove('hidden');
        }

        if (activeChip) {
          const previousIcon = activeChip.querySelector('.chips-text svg');
          if (previousIcon) {
            previousIcon.classList.add('-rotate-45');
          }
        }

        chips.forEach(chip => {
          chip.classList.remove('chips-blog-active');
        });

        chip.classList.add('chips-blog-active');

        const currentIcon = chip.querySelector('.chips-text svg');
        if (currentIcon) {
          currentIcon.classList.remove('-rotate-45');
        }

        activeChip = chip;
      });
    });

    const defaultChip = document.querySelector('.chips-label[data-tag="News"]');
    if (defaultChip) {
      defaultChip.classList.add('chips-blog-active');
      newsLayout.classList.remove('hidden');
    }

    // handle scroll articles containers here
    const prevArrowSecond = document.getElementById('prevArrowSecond');
    const nextArrowSecond = document.getElementById('nextArrowSecond');
    const prevArrowThird = document.getElementById('prevArrowThird');
    const nextArrowThird = document.getElementById('nextArrowThird');
    const firstScrollContainer = document.getElementById('second-row');
    const secondScrollContainer = document.getElementById('third-row');
    const articlesFirstContainer = Array.from(firstScrollContainer.querySelectorAll('.blog-item-horizontal-view'));
    const articlesSecondContainer = Array.from(secondScrollContainer.querySelectorAll('.blog-item-horizontal-view'));

    // get exact width + border of the image inside scroll containers
    function getImagesWidth(allImages) {
      const totalImagesWidth = allImages.map((image) => {
        const width = image.offsetWidth;
        const marginRight = parseInt(getComputedStyle(image).marginRight) || 0; // Fallback 

        return width + marginRight;
      }).reduce((acc, width) => acc + width, 0);

      return totalImagesWidth;
    }

    const imagesWidthFirstContainer = getImagesWidth(articlesFirstContainer);
    const firstScrollAmount = imagesWidthFirstContainer / articlesFirstContainer.length;
    const imagesWidthSecondContainer = getImagesWidth(articlesSecondContainer);
    const secondScrollAmount = imagesWidthSecondContainer / articlesSecondContainer.length;

    // handle arrows layout during scroll
    function updateArrows() {
      const maxScrollLeftFirst = firstScrollContainer.scrollWidth - firstScrollContainer.clientWidth;
      const maxScrollLeftSecond = secondScrollContainer.scrollWidth - secondScrollContainer.clientWidth;

      prevArrowSecond.classList.toggle('disabled', firstScrollContainer.scrollLeft === 0);
      nextArrowSecond.classList.toggle('disabled', firstScrollContainer.scrollLeft >= maxScrollLeftFirst);

      prevArrowThird.classList.toggle('disabled', secondScrollContainer.scrollLeft === 0);
      nextArrowThird.classList.toggle('disabled', secondScrollContainer.scrollLeft >= maxScrollLeftSecond);
    }

    // handle scroll
    function scrollRowBy(amount, row) {
      const maxScrollLeft = row.scrollWidth - row.clientWidth;
      let newScrollLeft = row.scrollLeft + amount;

      if (newScrollLeft < 0) {
        newScrollLeft = 0;
      } else if (newScrollLeft > maxScrollLeft) {
        newScrollLeft = maxScrollLeft;
      }

      row.scrollTo({
        left: newScrollLeft,
        behavior: 'smooth',
      });

      setTimeout(updateArrows, 300);
    }

    // handle click for each arrow
    if (prevArrowSecond && nextArrowSecond) {
      prevArrowSecond.addEventListener('click', function () {
        scrollRowBy(-firstScrollAmount, firstScrollContainer);
      });
      nextArrowSecond.addEventListener('click', function () {
        scrollRowBy(firstScrollAmount, firstScrollContainer);
      });
    }

    if (prevArrowThird && nextArrowThird) {
      prevArrowThird.addEventListener('click', function () {
        scrollRowBy(-secondScrollAmount, secondScrollContainer);
      });
      nextArrowThird.addEventListener('click', function () {
        scrollRowBy(secondScrollAmount, secondScrollContainer);
      });
    }

    updateArrows();
    firstScrollContainer.addEventListener('scroll', updateArrows);
    secondScrollContainer.addEventListener('scroll', updateArrows);


  });
</script>

{% schema %}
{
"name": "blog-list",
"settings": [
{
"type": "text",
"id": "article_download_cta",
"default": "Download",
"label": "Article Download Cta"
},
{
"type": "text",
"id": "article_cta",
"default": "Read More",
"label": "Article Cta"
}
]
}
{% endschema %}